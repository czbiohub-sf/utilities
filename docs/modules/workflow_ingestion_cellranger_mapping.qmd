---
title: "Cell Ranger mapping"
namespace: "Ingestion"
description: "A pipeline for running Cell Ranger mapping."
toc: false
---

::: {.column-margin}

### Info

ID: `cellranger_mapping`  
Namespace: `ingestion`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/main/workflows/ingestion/cellranger_mapping){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r main_build -latest \
  -main-script workflows/ingestion/cellranger_mapping/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
id: # please fill in - example: "foo"
input: # please fill in - example: ["sample_S1_L001_R1_001.fastq.gz", "sample_S1_L001_R2_001.fastq.gz"]
reference: # please fill in - example: "reference.tar.gz"

# Outputs
# output_raw: "$id.$key.output_raw.output_raw"
# output_h5mu: "$id.$key.output_h5mu.h5mu"
obsm_metrics: "metrics_summary"

# Cell Ranger arguments
# expect_cells: 3000
chemistry: "auto"
secondary_analysis: false
generate_bam: true
include_introns: true

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r main_build -latest \
  -profile docker \
  -main-script workflows/ingestion/cellranger_mapping/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name          |Description                                                                            |Attributes                                                                                                 |
|:-------------|:--------------------------------------------------------------------------------------|:----------------------------------------------------------------------------------------------------------|
|`--id`        |ID of the sample.                                                                      |`string`, required, example: `"foo"`                                                                       |
|`--input`     |The fastq.gz files to align. Can also be a single directory containing fastq.gz files. |`file`, required, example: `"sample_S1_L001_R1_001.fastq.gz"`, example: `"sample_S1_L001_R2_001.fastq.gz"` |
|`--reference` |The path to Cell Ranger reference tar.gz file.                                         |`file`, required, example: `"reference.tar.gz"`                                                            |


### Outputs

|Name             |Description                                                |Attributes                                 |
|:----------------|:----------------------------------------------------------|:------------------------------------------|
|`--output_raw`   |The raw output folder.                                     |`file`, required, example: `"output_dir"`  |
|`--output_h5mu`  |The converted h5mu file.                                   |`file`, required, example: `"output.h5mu"` |
|`--obsm_metrics` |Name of the .obsm slot under which to QC metrics (if any). |`string`, default: `"metrics_summary"`     |


### Cell Ranger arguments

|Name                   |Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |Attributes                  |
|:----------------------|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------|
|`--expect_cells`       |Expected number of recovered cells, used as input to cell calling algorithm.                                                                                                                                                                                                                                                                                                                                                                                                                                      |`integer`, example: `3000`  |
|`--chemistry`          |Assay configuration. - auto: autodetect mode - threeprime: Single Cell 3' - fiveprime: Single Cell 5' - SC3Pv1: Single Cell 3' v1 - SC3Pv2: Single Cell 3' v2 - SC3Pv3: Single Cell 3' v3 - SC3Pv3LT: Single Cell 3' v3 LT - SC3Pv3HT: Single Cell 3' v3 HT - SC5P-PE: Single Cell 5' paired-end - SC5P-R2: Single Cell 5' R2-only - SC-FB: Single Cell Antibody-only 3' v2 or 5' See https://kb.10xgenomics.com/hc/en-us/articles/115003764132-How-does-Cell-Ranger-auto-detect-chemistry- for more information. |`string`, default: `"auto"` |
|`--secondary_analysis` |Whether or not to run the secondary analysis e.g. clustering.                                                                                                                                                                                                                                                                                                                                                                                                                                                     |`boolean`, default: `FALSE` |
|`--generate_bam`       |Whether to generate a BAM file.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |`boolean`, default: `TRUE`  |
|`--include_introns`    |Include intronic reads in count (default=true unless --target-panel is specified in which case default=false)                                                                                                                                                                                                                                                                                                                                                                                                     |`boolean`, default: `TRUE`  |

## Authors

  * Angela Pisco [{{< fa brands github >}}](https://github.com/aopisco) [{{< fa brands orcid >}}](https://orcid.org/0000-0003-0142-2355) (author)
  * Robrecht Cannoodt [{{< fa brands github >}}](https://github.com/rcannood) [{{< fa brands orcid >}}](https://orcid.org/0000-0003-3641-729X) (author, maintainer)
  * Dries De Maeyer [{{< fa brands github >}}](https://github.com/ddemaeyer) (author)

## Visualisation

```{mermaid}
%%| column: screen-inset-shaded
flowchart LR
    p0(Input)
    p9(cellranger_count)
    p16(cellranger_count_split)
    p24(from_10xh5_to_h5mu)
    p31(Output)
    p0-->p9
    p9-->p16
    p16-->p24
    p24-->p31

```
