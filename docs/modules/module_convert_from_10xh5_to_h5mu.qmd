---
title: "From 10xh5 to h5mu"
namespace: "Convert"
description: "Converts a 10x h5 into an h5mu file"
toc: false
---

::: {.column-margin}

### Info

ID: `from_10xh5_to_h5mu`  
Namespace: `convert`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/main/src/convert/from_10xh5_to_h5mu){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r main_build -latest \
  -main-script target/nextflow/convert/from_10xh5_to_h5mu/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Inputs
input: # please fill in - example: "raw_feature_bc_matrix.h5"
# input_metrics_summary: "metrics_cellranger.h5"

# Outputs
# output: "$id.$key.output.h5mu"
uns_metrics: "metrics_cellranger"

# Arguments
# min_genes: 100
# min_counts: 1000

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r main_build -latest \
  -profile docker \
  -main-script target/nextflow/convert/from_10xh5_to_h5mu/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument groups

### Inputs

|Name                      |Description                                             |Attributes                                              |
|:-------------------------|:-------------------------------------------------------|:-------------------------------------------------------|
|`--input`                 |A 10x h5 file as generated by Cell Ranger.              |`file`, required, example: `"raw_feature_bc_matrix.h5"` |
|`--input_metrics_summary` |A metrics summary csv file as generated by Cell Ranger. |`file`, example: `"metrics_cellranger.h5"`              |


### Outputs

|Name            |Description                                               |Attributes                                |
|:---------------|:---------------------------------------------------------|:-----------------------------------------|
|`--output`      |Output h5mu file.                                         |`file`, example: `"output.h5mu"`          |
|`--uns_metrics` |Name of the .uns slot under which to QC metrics (if any). |`string`, default: `"metrics_cellranger"` |


### Arguments

|Name           |Description                                                              |Attributes                 |
|:--------------|:------------------------------------------------------------------------|:--------------------------|
|`--min_genes`  |Minimum number of counts required for a cell to pass filtering.          |`integer`, example: `100`  |
|`--min_counts` |Minimum number of genes expressed required for a cell to pass filtering. |`integer`, example: `1000` |

## Authors

  * Robrecht Cannoodt [{{< fa brands github >}}](https://github.com/rcannood) [{{< fa brands orcid >}}](https://orcid.org/0000-0003-3641-729X) (maintainer)
