---
title: "Tar extract"
namespace: "Compression"
description: "Extract files from a tar archive"
toc: false
---

::: {.column-margin}

### Info

ID: `tar_extract`  
Namespace: `compression`

### Links
[Source](https://github.com/openpipelines-bio/openpipeline/blob/main/src/compression/tar_extract){.btn-action .btn-sm .btn-info .btn role="button"}

:::



## Example commands

You can run the pipeline using `nextflow run`.

### View help

You can use `--help` as a parameter to get an overview of the possible parameters.

```bash
nextflow run openpipelines-bio/openpipeline \
  -r main_build -latest \
  -main-script target/nextflow/compression/tar_extract/main.nf \
  --help
```

### Run command

<details>
<summary>Example of `params.yaml`</summary>
```yaml
# Arguments
input: # please fill in - example: "input.tar.gz"
# output: "$id.$key.output.output"
# strip_components: 1
# exclude: "docs/figures"

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
```
</details>

```bash
nextflow run openpipelines-bio/openpipeline \
  -r main_build -latest \
  -profile docker \
  -main-script target/nextflow/compression/tar_extract/main.nf \
  -params-file params.yaml
```

:::{.callout-note}
Replace `-profile docker` with `-profile podman` or `-profile singularity` depending on the desired backend.
:::

## Argument group

### Arguments

|Name                 |Description                                                                                                                                                                                                              |Attributes                                   |
|:--------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------------------|
|`--input`            |Input file                                                                                                                                                                                                               |`file`, required, example: `"input.tar.gz"`  |
|`--output`           |Folder to restore file(s) to.                                                                                                                                                                                            |`file`, required, example: `"output_folder"` |
|`--strip_components` |Strip this amount of leading components from file names on extraction. For example, to extract only 'myfile.txt' from an archive containing the structure `this/goes/deep/myfile.txt', use 3 to strip 'this/goes/deep/'. |`integer`, example: `1`                      |
|`--exclude`          |Prevents any file or member whose name matches the shell wildcard (pattern) from being extracted.                                                                                                                        |`string`, example: `"docs/figures"`          |

## Authors

