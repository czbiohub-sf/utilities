functionality:
  name: "rna_multisample"
  namespace: "multiomics"
  description: "Processing unimodal multi-sample RNA transcriptomics data."
  authors:
    - __merge__: ../../../src/authors/dries_de_maeyer.yaml
      roles: [ author ]
    - __merge__: ../../../src/authors/robrecht_cannoodt.yaml
      roles: [ author, maintainer ]
    - __merge__: ../../../src/authors/dries_schaumont.yaml
      roles: [ author ]
  argument_groups:
    - name: "Inputs"
      arguments:
        - name: "--id"
          required: true
          type: string
          description: ID of the concatenated file
          example: concatenated
        - name: "--sample_id"
          required: true
          type: string
          multiple_sep: ';'
          multiple: true
          description: IDs of the sample.
          example: foo
        - name: "--input"
          required: true
          type: file
          multiple_sep: ';'
          multiple: true
          description: Path to the samples.
          example: dataset.h5mu
    - name: "Sample ID options"
      description: |
        Options for adding the id to .obs on the MuData object. Having a sample 
        id present in a requirement of several components for this pipeline.
      arguments:
        - name: "--add_id_to_obs"
          description: "Add the value passed with --id to .obs."
          type: boolean
          default: true
        - name: --add_id_obs_output
          description: |
            .Obs column to add the sample IDs to. Required and only used when 
            --add_id_to_obs is set to 'true'
          type: string
          default: "sample_id"
        - name: "--add_id_make_observation_keys_unique"
          type: boolean
          description: |
            Join the id to the .obs index (.obs_names). 
            Only used when --add_id_to_obs is set to 'true'.
          default: true
    - name: "Filtering highly variable genes"
      arguments:
        - name: "--filter_with_hvg_var_output"
          required: false
          type: string
          default: "filter_with_hvg"
          description: In which .var slot to store a boolean array corresponding to the highly variable genes.
        - name: "--filter_with_hvg_obs_batch_key"
          type: string
          default: "sample_id"
          required: false
          description: |
            If specified, highly-variable genes are selected within each batch separately and merged. This simple 
            process avoids the selection of batch-specific genes and acts as a lightweight batch correction method. 
            For all flavors, genes are first sorted by how many batches they are a HVG. For dispersion-based flavors 
            ties are broken by normalized dispersion. If flavor = 'seurat_v3', ties are broken by the median (across
            batches) rank based on within-batch normalized variance.
        - name: "--filter_with_hvg_flavor"
          type: string
          default: "seurat"
          choices: ["seurat", "cell_ranger", "seurat_v3"]
          description: |
            Choose the flavor for identifying highly variable genes. For the dispersion based methods
            in their default workflows, Seurat passes the cutoffs whereas Cell Ranger passes n_top_genes.
        - name: "--filter_with_hvg_n_top_genes"
          required: false
          type: integer
          description: Number of highly-variable genes to keep. Mandatory if filter_with_hvg_flavor is set to 'seurat_v3'.
    - name: "QC metrics calculation options"
      arguments:
        - name: "--var_qc_metrics"
          description: |
            Keys to select a boolean (containing only True or False) column from .var.
            For each cell, calculate the proportion of total values for genes which are labeled 'True', 
            compared to the total sum of the values for all genes.
          type: string
          multiple: True
          multiple_sep: ','
          required: false
          default: ["filter_with_hvg"]
          example: "ercc,highly_variable"
        - name: "--top_n_vars"
          type: integer
          description: |
            Number of top vars to be used to calculate cumulative proportions.
            If not specified, proportions are not calculated. `--top_n_vars 20,50` finds
            cumulative proportion to the 20th and 50th most expressed vars.
          multiple: true
          multiple_sep: ','
          required: false
          default: [50, 100, 200, 500]
  resources:
    - type: nextflow_script
      path: main.nf
  test_resources:
    - type: nextflow_script
      path: main.nf
      entrypoint: test_wf
    - path: ../../../resources_test/concat_test_data