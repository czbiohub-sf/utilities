functionality:
  name: "filter_with_scrublet"
  namespace: "filter"
  version: "main_build"
  authors:
  - name: "Dries De Maeyer"
    email: "ddemaeyer@gmail.com"
    roles:
    - "contributor"
    props:
      github: "ddemaeyer"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "maintainer"
    - "contributor"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "Input h5mu file"
    example:
    - "input.h5mu"
    default: []
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--modality"
    alternatives: []
    example: []
    default:
    - "rna"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "Output h5mu file."
    example:
    - "output.h5mu"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--obs_name_filter"
    alternatives: []
    description: "In which .obs slot to store a boolean array corresponding to which\
      \ observations should be filtered out."
    example: []
    default:
    - "filter_with_scrublet"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean_true"
    name: "--do_subset"
    alternatives: []
    description: "Whether to subset before storing the output."
    direction: "input"
    dest: "par"
  - type: "string"
    name: "--obs_name_doublet_score"
    alternatives: []
    description: "Name of the doublet scores column in the obs slot of the returned\
      \ object."
    example: []
    default:
    - "scrublet_doublet_score"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--min_counts"
    alternatives: []
    description: "The number of minimal UMI counts per cell that have to be present\
      \ for initial cell detection."
    example: []
    default:
    - 2
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--min_cells"
    alternatives: []
    description: "The number of cells in which UMIs for a gene were detected."
    example: []
    default:
    - 3
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--min_gene_variablity_percent"
    alternatives: []
    description: "Used for gene filtering prior to PCA. Keep the most highly variable\
      \ genes (in the top min_gene_variability_pctl percentile), as measured by the\
      \ v-statistic [Klein et al., Cell 2015]."
    example: []
    default:
    - 85.0
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--num_pca_components"
    alternatives: []
    description: "Number of principal components to use during PCA dimensionality\
      \ reduction."
    example: []
    default:
    - 30
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--distance_metric"
    alternatives: []
    description: "The distance metric used for computing similarities."
    example: []
    default:
    - "euclidean"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Doublet detection using the Scrublet method (Wolock, Lopez and Klein,\
    \ 2019).\nThe method tests for potential doublets by using the expression profiles\
    \ of\ncells to generate synthetic potential doubles which are tested against cells.\
    \ \nThe method returns a \"doublet score\" on which it calls for potential doublets.\n\
    \nFor the source code please visit https://github.com/AllonKleinLab/scrublet.\n\
    \nFor 10x we expect the doublet rates to be:\n  Multiplet Rate (%) - # of Cells\
    \ Loaded - # of Cells Recovered\n  ~0.4% ~800 ~500\n  ~0.8% ~1,600 ~1,000\n  ~1.6%\
    \ ~3,200 ~2,000\n  ~2.3% ~4,800 ~3,000\n  ~3.1% ~6,400 ~4,000\n  ~3.9% ~8,000\
    \ ~5,000\n  ~4.6% ~9,600 ~6,000\n  ~5.4% ~11,200 ~7,000\n  ~6.1% ~12,800 ~8,000\n\
    \  ~6.9% ~14,400 ~9,000\n  ~7.6% ~16,000 ~10,000\n"
  test_resources:
  - type: "python_script"
    path: "run_test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args:
  - "--env NUMBA_CACHE_DIR=/tmp"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "scanpy~=1.9.2"
    - "scrublet"
    - "mudata~=0.2.0"
    - "anndata~=0.8.0"
    - "annoy==1.16.3"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/filter/filter_with_scrublet/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/filter/filter_with_scrublet"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/filter/filter_with_scrublet/filter_with_scrublet"
  viash_version: "0.7.0"
  git_commit: "79131063f70d256bcdd4e47f0572f968cc71938b"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
