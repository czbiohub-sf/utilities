functionality:
  name: "filter_with_counts"
  namespace: "filter"
  version: "main_build"
  authors:
  - name: "Dries De Maeyer"
    email: "ddemaeyer@gmail.com"
    roles:
    - "author"
    props:
      github: "ddemaeyer"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "maintainer"
    - "author"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  arguments: []
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      alternatives: []
      description: "Input h5mu file"
      example:
      - "input.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      alternatives: []
      example: []
      default:
      - "rna"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--layer"
      alternatives: []
      example:
      - "raw_counts"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--var_gene_names"
      alternatives: []
      description: ".var column name to be used to detect mitochondrial genes instead\
        \ of .var_names (default if not set). \nGene names matching with the regex\
        \ value from --mitochondrial_gene_regex will be identified\nas a mitochondrial\
        \ gene.\n"
      example:
      - "gene_symbol"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--mitochondrial_gene_regex"
      alternatives: []
      description: "Regex string that identifies mitochondrial genes from --var_gene_names.\n\
        By default will detect human and mouse mitochondrial genes from a gene symbol.\n"
      example: []
      default:
      - "^[mM][tT]-"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      alternatives: []
      description: "Output h5mu file."
      example:
      - "output.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      alternatives: []
      description: "The compression format to be used on the output h5mu object."
      example:
      - "gzip"
      default: []
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean_true"
      name: "--do_subset"
      alternatives: []
      description: "Whether to subset before storing the output."
      direction: "input"
      dest: "par"
    - type: "string"
      name: "--obs_name_filter"
      alternatives: []
      description: "In which .obs slot to store a boolean array corresponding to which\
        \ observations should be removed."
      example: []
      default:
      - "filter_with_counts"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--var_name_filter"
      alternatives: []
      description: "In which .var slot to store a boolean array corresponding to which\
        \ variables should be removed."
      example: []
      default:
      - "filter_with_counts"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "integer"
      name: "--min_counts"
      alternatives: []
      description: "Minimum number of counts captured per cell."
      example:
      - 200
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--max_counts"
      alternatives: []
      description: "Maximum number of counts captured per cell."
      example:
      - 5000000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--min_genes_per_cell"
      alternatives: []
      description: "Minimum of non-zero values per cell."
      example:
      - 200
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--max_genes_per_cell"
      alternatives: []
      description: "Maximum of non-zero values per cell."
      example:
      - 1500000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--min_cells_per_gene"
      alternatives: []
      description: "Minimum of non-zero values per gene."
      example:
      - 3
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--min_fraction_mito"
      alternatives: []
      description: "Minimum fraction of UMIs that are mitochondrial."
      example:
      - 0.0
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--max_fraction_mito"
      alternatives: []
      description: "Maximum fraction of UMIs that are mitochondrial."
      example:
      - 0.2
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Filter scRNA-seq data based on the primary QC metrics. \nThis is based\
    \ on both the UMI counts, the gene counts \nand the mitochondrial genes (genes\
    \ starting with mt/MT).\n"
  test_resources:
  - type: "python_script"
    path: "run_test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.8"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "mudata~=0.2.0"
    - "anndata~=0.8.0"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup:
  - type: "python"
    user: false
    packages:
    - "viashpy"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/filter/filter_with_counts/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/filter/filter_with_counts"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/filter/filter_with_counts/filter_with_counts"
  viash_version: "0.7.1"
  git_commit: "87117a5a2cbcae3a1822c26b043045a286f5e687"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
