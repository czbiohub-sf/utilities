functionality:
  name: "filter_with_hvg"
  namespace: "filter"
  version: "main_build"
  authors:
  - name: "Dries De Maeyer"
    email: "ddemaeyer@gmail.com"
    roles:
    - "contributor"
    props:
      github: "ddemaeyer"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "maintainer"
    - "contributor"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "Input h5mu file"
    example:
    - "input.h5mu"
    default: []
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--modality"
    alternatives: []
    example: []
    default:
    - "rna"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--layer"
    alternatives: []
    description: "use adata.layers[layer] for expression values instead of adata.X."
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "Output h5mu file."
    example:
    - "output.h5mu"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--output_compression"
    alternatives: []
    description: "The compression format to be used on the output h5mu object."
    example:
    - "gzip"
    default: []
    required: false
    choices:
    - "gzip"
    - "lzf"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--var_name_filter"
    alternatives: []
    description: "In which .var slot to store a boolean array corresponding to which\
      \ observations should be filtered out."
    example: []
    default:
    - "filter_with_hvg"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--varm_name"
    alternatives: []
    description: "In which .varm slot to store additional metadata."
    example: []
    default:
    - "hvg"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean_true"
    name: "--do_subset"
    alternatives: []
    description: "Whether to subset before storing the output."
    direction: "input"
    dest: "par"
  - type: "string"
    name: "--flavor"
    alternatives: []
    description: "Choose the flavor for identifying highly variable genes. For the\
      \ dispersion based methods\nin their default workflows, Seurat passes the cutoffs\
      \ whereas Cell Ranger passes n_top_genes.\n"
    example: []
    default:
    - "seurat"
    required: false
    choices:
    - "seurat"
    - "cell_ranger"
    - "seurat_v3"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_top_genes"
    alternatives: []
    description: "Number of highly-variable genes to keep. Mandatory if flavor='seurat_v3'."
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--min_mean"
    alternatives: []
    description: "If n_top_genes is defined, this and all other cutoffs for the means\
      \ and the normalized dispersions are ignored. Ignored if flavor='seurat_v3'."
    example: []
    default:
    - 0.0125
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--max_mean"
    alternatives: []
    description: "If n_top_genes is defined, this and all other cutoffs for the means\
      \ and the normalized dispersions are ignored. Ignored if flavor='seurat_v3'."
    example: []
    default:
    - 3.0
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--min_disp"
    alternatives: []
    description: "If n_top_genes is defined, this and all other cutoffs for the means\
      \ and the normalized dispersions are ignored. Ignored if flavor='seurat_v3'."
    example: []
    default:
    - 0.5
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--max_disp"
    alternatives: []
    description: "If n_top_genes is defined, this and all other cutoffs for the means\
      \ and the normalized dispersions are ignored. Ignored if flavor='seurat_v3'.\
      \ Default is +inf."
    example: []
    default: []
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--span"
    alternatives: []
    description: "The fraction of the data (cells) used when estimating the variance\
      \ in the loess model fit if flavor='seurat_v3'."
    example: []
    default:
    - 0.3
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_bins"
    alternatives: []
    description: "Number of bins for binning the mean gene expression. Normalization\
      \ is done with respect to each bin. If just a single gene falls into a bin,\
      \ the normalized dispersion is artificially set to 1."
    example: []
    default:
    - 20
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--obs_batch_key"
    alternatives: []
    description: "If specified, highly-variable genes are selected within each batch\
      \ separately and merged. This simple \nprocess avoids the selection of batch-specific\
      \ genes and acts as a lightweight batch correction method. \nFor all flavors,\
      \ genes are first sorted by how many batches they are a HVG. For dispersion-based\
      \ flavors \nties are broken by normalized dispersion. If flavor = 'seurat_v3',\
      \ ties are broken by the median (across\nbatches) rank based on within-batch\
      \ normalized variance.\n"
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Annotate highly variable genes [Satija15] [Zheng17] [Stuart19].\n\n\
    Expects logarithmized data, except when flavor='seurat_v3' in which count data\
    \ is expected.\n\nDepending on flavor, this reproduces the R-implementations of\
    \ Seurat [Satija15], Cell Ranger [Zheng17], and Seurat v3 [Stuart19].\n\nFor the\
    \ dispersion-based methods ([Satija15] and [Zheng17]), the normalized dispersion\
    \ is obtained by scaling with the mean and standard deviation of the dispersions\
    \ for genes falling into a given bin for mean expression of genes. This means\
    \ that for each bin of mean expression, highly variable genes are selected.\n\n\
    For [Stuart19], a normalized variance for each gene is computed. First, the data\
    \ are standardized (i.e., z-score normalization per feature) with a regularized\
    \ standard deviation. Next, the normalized variance is computed as the variance\
    \ of each gene after the transformation. Genes are ranked by the normalized variance.\n"
  test_resources:
  - type: "python_script"
    path: "run_test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.8"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "scanpy~=1.9.2"
    - "mudata~=0.2.0"
    - "anndata~=0.8.0"
    - "scikit-misc"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup:
  - type: "python"
    user: false
    packages:
    - "pytest"
    - "viashpy"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/filter/filter_with_hvg/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/filter/filter_with_hvg"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/filter/filter_with_hvg/filter_with_hvg"
  viash_version: "0.7.1"
  git_commit: "275ed3f9481a5183da75c603edd18436aee5daa4"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
