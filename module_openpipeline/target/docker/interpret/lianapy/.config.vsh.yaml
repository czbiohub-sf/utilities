functionality:
  name: "lianapy"
  namespace: "interpret"
  version: "main_build"
  authors:
  - name: "Mauro Saporita"
    email: "maurosaporita@gmail.com"
    roles:
    - "author"
    props:
      github: "mauro-saporita"
  - name: "Povilas Gibas"
    email: "povilasgibas@gmail.com"
    roles:
    - "author"
    props:
      github: "PoGibas"
  arguments:
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "Input h5mu file"
    example: []
    default: []
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives:
    - "-o"
    description: "Output h5mu file."
    example: []
    default: []
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--output_compression"
    alternatives: []
    example: []
    default:
    - "gzip"
    required: false
    choices:
    - "gzip"
    - "lzf"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--modality"
    alternatives: []
    example: []
    default:
    - "rna"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--layer"
    alternatives: []
    description: "Layer in anndata.AnnData.layers to use. If None, use mudata.mod[modality].X."
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--groupby"
    alternatives: []
    description: "The key of the observations grouping to consider."
    example: []
    default:
    - "bulk_labels"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--resource_name"
    alternatives: []
    description: "Name of the resource to be loaded and use for ligand-receptor inference."
    example: []
    default:
    - "consensus"
    required: false
    choices:
    - "baccin2019"
    - "cellcall"
    - "cellchatdb"
    - "cellinker"
    - "cellphonedb"
    - "celltalkdb"
    - "connectomedb2020"
    - "consensus"
    - "embrace"
    - "guide2pharma"
    - "hpmr"
    - "icellnet"
    - "italk"
    - "kirouac2010"
    - "lrdb"
    - "mouseconsensus"
    - "ramilowski2015"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--gene_symbol"
    alternatives: []
    description: "Column name in var DataFrame in which gene symbol are stored."
    example: []
    default:
    - "gene_symbol"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--expr_prop"
    alternatives: []
    description: "Minimum expression proportion for the ligands/receptors (and their\
      \ subunits) in the corresponding cell identities. Set to '0', to return unfiltered\
      \ results."
    example: []
    default:
    - 0.1
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--min_cells"
    alternatives: []
    description: "Minimum cells per cell identity ('groupby') to be considered for\
      \ downstream analysis."
    example: []
    default:
    - 5
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--aggregate_method"
    alternatives: []
    description: "Method aggregation approach, one of ['mean', 'rra'], where 'mean'\
      \ represents the mean rank, while 'rra' is the RobustRankAggregate (Kolde et\
      \ al., 2014) of the interactions."
    example: []
    default:
    - "rra"
    required: false
    choices:
    - "mean"
    - "rra"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean"
    name: "--return_all_lrs"
    alternatives: []
    description: "Bool whether to return all LRs, or only those that surpass the 'expr_prop'\
      \ threshold. Those interactions that do not pass the 'expr_prop' threshold will\
      \ be assigned to the *worst* score of the ones that do. 'False' by default."
    example: []
    default:
    - false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_perms"
    alternatives: []
    description: "Number of permutations for the permutation test. Note that this\
      \ is relevant only for permutation-based methods - e.g. 'CellPhoneDB"
    example: []
    default:
    - 100
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Performs LIANA integration based as described in https://github.com/saezlab/liana-py"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3/pbmc_1k_protein_v3_mms.h5mu"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "mudata~=0.2.0"
    - "git+https://github.com/saezlab/liana-py.git@11156ddd0139a49dfebdd08ac230f0ebf008b7f8"
    - "numpy~=1.24.3"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/interpret/lianapy/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/interpret/lianapy"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/interpret/lianapy/lianapy"
  viash_version: "0.7.1"
  git_commit: "275ed3f9481a5183da75c603edd18436aee5daa4"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
