functionality:
  name: "popv"
  namespace: "annotate"
  version: "main_build"
  authors:
  - name: "Matthias Beyens"
    email: "matthias.beyens@gmail.com"
    roles:
    - "author"
    props:
      github: "MatthiasBeyens"
      orcid: "0000-0003-3304-0706"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "author"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  arguments: []
  argument_groups:
  - name: "Inputs"
    description: "Arguments related to the input (aka query) dataset."
    arguments:
    - type: "file"
      name: "--input"
      alternatives:
      - "-i"
      description: "Input h5mu file."
      example:
      - "input.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      alternatives: []
      description: "Which modality to process."
      example: []
      default:
      - "rna"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_layer"
      alternatives: []
      description: "Which layer to use. If no value is provided, the counts are assumed\
        \ to be in the `.X` slot. Otherwise, count data is expected to be in `.layers[input_layer]`."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_obs_batch"
      alternatives: []
      description: "Key in obs field of input adata for batch information. If no value\
        \ is provided, batch label is assumed to be unknown."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_var_subset"
      alternatives: []
      description: "Subset the input object with this column."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_obs_label"
      alternatives: []
      description: "Key in obs field of input adata for label information. This is\
        \ only used for training scANVI. Unlabelled cells should be set to `\"unknown_celltype_label\"\
        `."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--unknown_celltype_label"
      alternatives: []
      description: "If `input_obs_label` is specified, cells with this value will\
        \ be treated as unknown and will be predicted by the model."
      example: []
      default:
      - "unknown"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Reference"
    description: "Arguments related to the reference dataset."
    arguments:
    - type: "file"
      name: "--reference"
      alternatives: []
      description: "User-provided reference tissue. The data that will be used as\
        \ reference to call cell types."
      example:
      - "TS_Bladder_filtered.h5ad"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--reference_layer"
      alternatives: []
      description: "Which layer to use. If no value is provided, the counts are assumed\
        \ to be in the `.X` slot. Otherwise, count data is expected to be in `.layers[reference_layer]`."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--reference_obs_label"
      alternatives: []
      description: "Key in obs field of reference AnnData with cell-type information."
      example: []
      default:
      - "cell_ontology_class"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--reference_obs_batch"
      alternatives: []
      description: "Key in obs field of input adata for batch information."
      example: []
      default:
      - "donor_assay"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    description: "Output arguments."
    arguments:
    - type: "file"
      name: "--output"
      alternatives: []
      description: "Output h5mu file."
      example:
      - "output.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      alternatives: []
      example:
      - "gzip"
      default: []
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    description: "Other arguments."
    arguments:
    - type: "string"
      name: "--methods"
      alternatives: []
      description: "Methods to call cell types. By default, runs to knn_on_scvi and\
        \ scanvi."
      example:
      - "knn_on_scvi"
      - "scanvi"
      default: []
      required: true
      choices:
      - "celltypist"
      - "knn_on_bbknn"
      - "knn_on_scanorama"
      - "knn_on_scvi"
      - "onclass"
      - "rf"
      - "scanvi"
      - "svm"
      direction: "input"
      multiple: true
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Performs popular major vote cell typing on single cell sequence data\
    \ using multiple algorithms. Note that this is a one-shot version of PopV."
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/annotation_test_data/"
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3/"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.9"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "mudata~=0.2.0"
    - "anndata~=0.8.0"
    - "scanpy~=1.9.2"
    - "scvi-tools~=0.20.3"
    pip: []
    pypi: []
    git:
    - "https://github.com/czbiohub/PopV.git"
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  - type: "docker"
    label: []
    add: []
    copy: []
    run:
    - "cd /opt && mkdir -p /opt/popv_cl_ontology && \\\nwget https://raw.githubusercontent.com/czbiohub/PopV/main/ontology/cl.obo\
      \ -O \"popv_cl_ontology/cl.obo\" && \\\nwget https://raw.githubusercontent.com/czbiohub/PopV/main/ontology/cl.ontology\
      \ -O \"popv_cl_ontology/cl.ontology\" && \\\nwget https://raw.githubusercontent.com/czbiohub/PopV/main/ontology/cl.ontology.nlp.emb\
      \ -O \"popv_cl_ontology/cl.ontology.nlp.emb\"\n"
    build_args: []
    env: []
  test_setup:
  - type: "python"
    user: false
    packages:
    - "viashpy"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highmem"
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/annotate/popv/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/annotate/popv"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/annotate/popv/popv"
  viash_version: "0.7.1"
  git_commit: "275ed3f9481a5183da75c603edd18436aee5daa4"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
