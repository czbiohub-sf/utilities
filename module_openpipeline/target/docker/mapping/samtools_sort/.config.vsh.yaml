functionality:
  name: "samtools_sort"
  namespace: "mapping"
  version: "0.7.1"
  authors:
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "author"
    - "maintainer"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  - name: "Angela Pisco"
    roles:
    - "author"
    props:
      github: "aopisco"
      orcid: "0000-0003-0142-2355"
  arguments: []
  argument_groups:
  - name: "Input"
    arguments:
    - type: "file"
      name: "--input"
      alternatives: []
      description: "Path to the SAM/BAM/CRAM files containing the mapped reads."
      info:
        orig_arg: "in_sam"
      example:
      - "input.bam"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output"
    arguments:
    - type: "file"
      name: "--output_bam"
      alternatives: []
      description: "Filename to output the counts to."
      info:
        orig_arg: "-o"
      example:
      - "output.bam"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--output_bai"
      alternatives: []
      description: "BAI-format index for BAM file."
      example:
      - "output.bam.bai"
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_format"
      alternatives: []
      description: "The output format. By default, samtools tries to select a format\
        \ based on the -o filename extension; if output is to standard output or no\
        \ format can be deduced, bam is selected."
      info:
        orig_arg: "-O"
      example:
      - "bam"
      default: []
      required: false
      choices:
      - "sam"
      - "bam"
      - "cram"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--compression"
      alternatives: []
      description: "Compression level, from 0 (uncompressed) to 9 (best"
      info:
        orig_arg: "-l"
      example:
      - 5
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "boolean_true"
      name: "--minimizer_cluster"
      alternatives: []
      description: "Sort unmapped reads (those in chromosome \"*\") by their sequence\
        \ minimiser (Schleimer et al., 2003; Roberts et al., 2004), \nalso reverse\
        \ complementing as appropriate. This has the effect of collating some similar\
        \ data together, improving the \ncompressibility of the unmapped sequence.\
        \ The minimiser kmer size is adjusted using the -K option. Note data compressed\
        \ \nin this manner may need to be name collated prior to conversion back to\
        \ fastq.\n\nMapped sequences are sorted by chromosome and position. \n"
      info:
        orig_arg: "-M"
      direction: "input"
      dest: "par"
    - type: "integer"
      name: "--minimizer_kmer"
      alternatives: []
      description: "Sets the kmer size to be used in the -M option."
      info:
        orig_arg: "-K"
      example:
      - 20
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean_true"
      name: "--sort_by_read_names"
      alternatives: []
      description: "Sort by read names (i.e., the QNAME field) rather than by chromosomal\
        \ coordinates."
      info:
        orig_arg: "-n"
      direction: "input"
      dest: "par"
    - type: "string"
      name: "--sort_by"
      alternatives: []
      description: "Sort first by this value in the alignment tag, then by position\
        \ or name (if also using -n)."
      info:
        orig_arg: "-t"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean_true"
      name: "--no_pg"
      alternatives: []
      description: "Do not add a @PG line to the header of the output file."
      info:
        orig_arg: "--no-PG"
      direction: "input"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Sort and (optionally) index alignments.\n\nReads are sorted by leftmost\
    \ coordinates, or by read name when `--sort_by_read_names` is used.\n\nAn appropriate\
    \ `@HD-SO` sort order header tag will be added or an existing one updated if necessary.\n\
    \nNote that to generate an index file (by specifying `--output_bai`), the default\
    \ coordinate sort must be used.\nThus the `--sort_by_read_names` and `--sort_by\
    \ <TAG>` options are incompatible with `--output_bai`. \n"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/cellranger_tiny_fastq"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "apt"
    packages:
    - "samtools"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "pyyaml"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highmem"
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/mapping/samtools_sort/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/mapping/samtools_sort"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/mapping/samtools_sort/samtools_sort"
  viash_version: "0.7.1"
  git_commit: "a80439cf867ae6259990141dc4596cdcaa26ece6"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
