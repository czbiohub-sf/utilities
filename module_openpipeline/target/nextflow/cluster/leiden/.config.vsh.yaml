functionality:
  name: "leiden"
  namespace: "cluster"
  version: "main_build"
  authors:
  - name: "Dries De Maeyer"
    email: "ddemaeyer@gmail.com"
    roles:
    - "maintainer"
    props:
      github: "ddemaeyer"
  arguments:
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "Input file."
    example:
    - "input.h5mu"
    default: []
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--modality"
    alternatives: []
    example: []
    default:
    - "rna"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--obsp_connectivities"
    alternatives: []
    description: "In which .obsp slot the neighbor connectivities can be found."
    example: []
    default:
    - "connectivities"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives:
    - "-o"
    description: "Output file."
    example:
    - "output.h5mu"
    default: []
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--output_compression"
    alternatives: []
    example:
    - "gzip"
    default: []
    required: false
    choices:
    - "gzip"
    - "lzf"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--obs_name"
    alternatives: []
    description: "Name of the .obs key under which to add the cluster labels."
    example: []
    default:
    - "leiden"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--resolution"
    alternatives: []
    description: "A parameter value controlling the coarseness of the clustering.\
      \ Higher values lead to more clusters."
    example: []
    default:
    - 1.0
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Cluster cells using the Leiden algorithm [Traag18] implemented in\
    \ the Scanpy framework [Wolf18]. \nLeiden is an improved version of the Louvain\
    \ algorithm [Blondel08]. \nIt has been proposed for single-cell analysis by [Levine15].\
    \ \nThis requires having ran `neighbors/find_neighbors` or `neighbors/bbknn` first.\n\
    \nBlondel08: Blondel et al. (2008), Fast unfolding of communities in large networks,\
    \ J. Stat. Mech.  \nLevine15: Levine et al. (2015), Data-Driven Phenotypic Dissection\
    \ of AML Reveals Progenitor-like Cells that Correlate with Prognosis, Cell.  \n\
    Traag18: Traag et al. (2018), From Louvain to Leiden: guaranteeing well-connected\
    \ communities arXiv.  \nWolf18: Wolf et al. (2018), Scanpy: large-scale single-cell\
    \ gene expression data analysis, Genome Biology.  \n"
  test_resources:
  - type: "python_script"
    path: "run_test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.8"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "apt"
    packages:
    - "cmake"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "scanpy~=1.9.2"
    - "leidenalg~=0.8.9"
    - "mudata~=0.2.0"
    - "anndata~=0.8.0"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/cluster/leiden/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/cluster/leiden"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/cluster/leiden/leiden"
  viash_version: "0.7.1"
  git_commit: "f2e21f1f2d74edac46fca1d608976ca77ca65d0f"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
