functionality:
  name: "star_align_v273a"
  namespace: "mapping"
  version: "main_build"
  authors:
  - name: "Angela Pisco"
    roles:
    - "author"
    props:
      github: "aopisco"
      orcid: "0000-0003-0142-2355"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "author"
    - "maintainer"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  arguments: []
  argument_groups:
  - name: "Input/Output"
    arguments:
    - type: "file"
      name: "--input"
      alternatives:
      - "--readFilesIn"
      description: "The FASTQ files to be analyzed. Corresponds to the --readFilesIn\
        \ in the STAR command."
      example:
      - "mysample_S1_L001_R1_001.fastq.gz"
      - "mysample_S1_L001_R2_001.fastq.gz"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--reference"
      alternatives:
      - "--genomeDir"
      description: "Path to the reference built by star_build_reference. Corresponds\
        \ to the --genomeDir in the STAR command."
      example:
      - "/path/to/reference"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--output"
      alternatives:
      - "--outFileNamePrefix"
      description: "Path to output directory. Corresponds to the --outFileNamePrefix\
        \ in the STAR command."
      example:
      - "/path/to/foo"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Run Parameters"
    arguments:
    - type: "integer"
      name: "--runRNGseed"
      alternatives: []
      description: "random number generator seed."
      example:
      - 777
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Genome Parameters"
    arguments:
    - type: "string"
      name: "--genomeLoad"
      alternatives: []
      description: "mode of shared memory usage for the genome files. Only used with\
        \ --runMode alignReads.\n\n- LoadAndKeep     ... load genome into shared and\
        \ keep it in memory after run\n- LoadAndRemove   ... load genome into shared\
        \ but remove it after run\n- LoadAndExit     ... load genome into shared memory\
        \ and exit, keeping the genome in memory for future runs\n- Remove       \
        \   ... do not map anything, just remove loaded genome from memory\n- NoSharedMemory\
        \  ... do not use shared memory, each job will have its own private copy of\
        \ the genome"
      example:
      - "NoSharedMemory"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--genomeFastaFiles"
      alternatives: []
      description: "path(s) to the fasta files with the genome sequences, separated\
        \ by spaces. These files should be plain text FASTA files, they *cannot* be\
        \ zipped.\n\nRequired for the genome generation (--runMode genomeGenerate).\
        \ Can also be used in the mapping (--runMode alignReads) to add extra (new)\
        \ sequences to the genome (e.g. spike-ins)."
      example: []
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--genomeFileSizes"
      alternatives: []
      description: "genome files exact sizes in bytes. Typically, this should not\
        \ be defined by the user."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--genomeTransformOutput"
      alternatives: []
      description: "which output to transform back to original genome\n\n- SAM   \
        \  ... SAM/BAM alignments\n- SJ      ... splice junctions (SJ.out.tab)\n-\
        \ None    ... no transformation of the output"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--genomeChrSetMitochondrial"
      alternatives: []
      description: "names of the mitochondrial chromosomes. Presently only used for\
        \ STARsolo statistics output/"
      example:
      - "chrM"
      - "M"
      - "MT"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "Splice Junctions Database"
    arguments:
    - type: "string"
      name: "--sjdbFileChrStartEnd"
      alternatives: []
      description: "path to the files with genomic coordinates (chr <tab> start <tab>\
        \ end <tab> strand) for the splice junction introns. Multiple files can be\
        \ supplied and will be concatenated."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--sjdbGTFfile"
      alternatives: []
      description: "path to the GTF file with annotations"
      example: []
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--sjdbGTFchrPrefix"
      alternatives: []
      description: "prefix for chromosome names in a GTF file (e.g. 'chr' for using\
        \ ENSMEBL annotations with UCSC genomes)"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--sjdbGTFfeatureExon"
      alternatives: []
      description: "feature type in GTF file to be used as exons for building transcripts"
      example:
      - "exon"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--sjdbGTFtagExonParentTranscript"
      alternatives: []
      description: "GTF attribute name for parent transcript ID (default \"transcript_id\"\
        \ works for GTF files)"
      example:
      - "transcript_id"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--sjdbGTFtagExonParentGene"
      alternatives: []
      description: "GTF attribute name for parent gene ID (default \"gene_id\" works\
        \ for GTF files)"
      example:
      - "gene_id"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--sjdbGTFtagExonParentGeneName"
      alternatives: []
      description: "GTF attribute name for parent gene name"
      example:
      - "gene_name"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--sjdbGTFtagExonParentGeneType"
      alternatives: []
      description: "GTF attribute name for parent gene type"
      example:
      - "gene_type"
      - "gene_biotype"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--sjdbOverhang"
      alternatives: []
      description: "length of the donor/acceptor sequence on each side of the junctions,\
        \ ideally = (mate_length - 1)"
      example:
      - 100
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--sjdbScore"
      alternatives: []
      description: "extra alignment score for alignments that cross database junctions"
      example:
      - 2
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--sjdbInsertSave"
      alternatives: []
      description: "which files to save when sjdb junctions are inserted on the fly\
        \ at the mapping step\n\n- Basic ... only small junction / transcript files\n\
        - All   ... all files including big Genome, SA and SAindex - this will create\
        \ a complete genome directory"
      example:
      - "Basic"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Variation parameters"
    arguments:
    - type: "string"
      name: "--varVCFfile"
      alternatives: []
      description: "path to the VCF file that contains variation data. The 10th column\
        \ should contain the genotype information, e.g. 0/1"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Read Parameters"
    arguments:
    - type: "string"
      name: "--readFilesType"
      alternatives: []
      description: "format of input read files\n\n- Fastx       ... FASTA or FASTQ\n\
        - SAM SE      ... SAM or BAM single-end reads; for BAM use --readFilesCommand\
        \ samtools view\n- SAM PE      ... SAM or BAM paired-end reads; for BAM use\
        \ --readFilesCommand samtools view"
      example:
      - "Fastx"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--readFilesSAMattrKeep"
      alternatives: []
      description: "for --readFilesType SAM SE/PE, which SAM tags to keep in the output\
        \ BAM, e.g.: --readFilesSAMtagsKeep RG PL\n\n- All     ... keep all tags\n\
        - None    ... do not keep any tags"
      example:
      - "All"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--readFilesManifest"
      alternatives: []
      description: "path to the \"manifest\" file with the names of read files. The\
        \ manifest file should contain 3 tab-separated columns:\n\npaired-end reads:\
        \ read1_file_name $tab$ read2_file_name $tab$ read_group_line.\nsingle-end\
        \ reads: read1_file_name $tab$ -               $tab$ read_group_line.\nSpaces,\
        \ but not tabs are allowed in file names.\nIf read_group_line does not start\
        \ with ID:, it can only contain one ID field, and ID: will be added to it.\n\
        If read_group_line starts with ID:, it can contain several fields separated\
        \ by $tab$, and all fields will be be copied verbatim into SAM @RG header\
        \ line."
      example: []
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--readFilesPrefix"
      alternatives: []
      description: "prefix for the read files names, i.e. it will be added in front\
        \ of the strings in --readFilesIn"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--readFilesCommand"
      alternatives: []
      description: "command line to execute for each of the input file. This command\
        \ should generate FASTA or FASTQ text and send it to stdout\n\nFor example:\
        \ zcat - to uncompress .gz files, bzcat - to uncompress .bz2 files, etc."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--readMapNumber"
      alternatives: []
      description: "number of reads to map from the beginning of the file\n\n-1: map\
        \ all reads"
      example:
      - -1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--readMatesLengthsIn"
      alternatives: []
      description: "Equal/NotEqual - lengths of names,sequences,qualities for both\
        \ mates are the same  / not the same. NotEqual is safe in all situations."
      example:
      - "NotEqual"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--readNameSeparator"
      alternatives: []
      description: "character(s) separating the part of the read names that will be\
        \ trimmed in output (read name after space is always trimmed)"
      example:
      - "/"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--readQualityScoreBase"
      alternatives: []
      description: "number to be subtracted from the ASCII code to get Phred quality\
        \ score"
      example:
      - 33
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Read Clipping"
    arguments:
    - type: "string"
      name: "--clipAdapterType"
      alternatives: []
      description: "adapter clipping type\n\n- Hamming ... adapter clipping based\
        \ on Hamming distance, with the number of mismatches controlled by --clip5pAdapterMMp\n\
        - CellRanger4 ... 5p and 3p adapter clipping similar to CellRanger4. Utilizes\
        \ Opal package by Martin Šošić: https://github.com/Martinsos/opal\n- None\
        \ ... no adapter clipping, all other clip* parameters are disregarded"
      example:
      - "Hamming"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--clip3pNbases"
      alternatives: []
      description: "number(s) of bases to clip from 3p of each mate. If one value\
        \ is given, it will be assumed the same for both mates."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--clip3pAdapterSeq"
      alternatives: []
      description: "adapter sequences to clip from 3p of each mate.  If one value\
        \ is given, it will be assumed the same for both mates.\n\n- polyA ... polyA\
        \ sequence with the length equal to read length"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "double"
      name: "--clip3pAdapterMMp"
      alternatives: []
      description: "max proportion of mismatches for 3p adapter clipping for each\
        \ mate.  If one value is given, it will be assumed the same for both mates."
      example:
      - 0.1
      default: []
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--clip3pAfterAdapterNbases"
      alternatives: []
      description: "number of bases to clip from 3p of each mate after the adapter\
        \ clipping. If one value is given, it will be assumed the same for both mates."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--clip5pNbases"
      alternatives: []
      description: "number(s) of bases to clip from 5p of each mate. If one value\
        \ is given, it will be assumed the same for both mates."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "Limits"
    arguments:
    - type: "long"
      name: "--limitGenomeGenerateRAM"
      alternatives: []
      description: "maximum available RAM (bytes) for genome generation"
      example:
      - 31000000000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "long"
      name: "--limitIObufferSize"
      alternatives: []
      description: "max available buffers size (bytes) for input/output, per thread"
      example:
      - 30000000
      - 50000000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "long"
      name: "--limitOutSAMoneReadBytes"
      alternatives: []
      description: "max size of the SAM record (bytes) for one read. Recommended value:\
        \ >(2*(LengthMate1+LengthMate2+100)*outFilterMultimapNmax"
      example:
      - 100000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--limitOutSJoneRead"
      alternatives: []
      description: "max number of junctions for one read (including all multi-mappers)"
      example:
      - 1000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--limitOutSJcollapsed"
      alternatives: []
      description: "max number of collapsed junctions"
      example:
      - 1000000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "long"
      name: "--limitBAMsortRAM"
      alternatives: []
      description: "maximum available RAM (bytes) for sorting BAM. If =0, it will\
        \ be set to the genome index size. 0 value can only be used with --genomeLoad\
        \ NoSharedMemory option."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--limitSjdbInsertNsj"
      alternatives: []
      description: "maximum number of junctions to be inserted to the genome on the\
        \ fly at the mapping stage, including those from annotations and those detected\
        \ in the 1st step of the 2-pass run"
      example:
      - 1000000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--limitNreadsSoft"
      alternatives: []
      description: "soft limit on the number of reads"
      example:
      - -1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output: general"
    arguments:
    - type: "string"
      name: "--outTmpKeep"
      alternatives: []
      description: "whether to keep the temporary files after STAR runs is finished\n\
        \n- None ... remove all temporary files\n- All ... keep all files"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outStd"
      alternatives: []
      description: "which output will be directed to stdout (standard out)\n\n- Log\
        \                    ... log messages\n- SAM                    ... alignments\
        \ in SAM format (which normally are output to Aligned.out.sam file), normal\
        \ standard output will go into Log.std.out\n- BAM_Unsorted           ... alignments\
        \ in BAM format, unsorted. Requires --outSAMtype BAM Unsorted\n- BAM_SortedByCoordinate\
        \ ... alignments in BAM format, sorted by coordinate. Requires --outSAMtype\
        \ BAM SortedByCoordinate\n- BAM_Quant              ... alignments to transcriptome\
        \ in BAM format, unsorted. Requires --quantMode TranscriptomeSAM"
      example:
      - "Log"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outReadsUnmapped"
      alternatives: []
      description: "output of unmapped and partially mapped (i.e. mapped only one\
        \ mate of a paired end read) reads in separate file(s).\n\n- None    ... no\
        \ output\n- Fastx   ... output in separate fasta/fastq files, Unmapped.out.mate1/2"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outQSconversionAdd"
      alternatives: []
      description: "add this number to the quality score (e.g. to convert from Illumina\
        \ to Sanger, use -31)"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outMultimapperOrder"
      alternatives: []
      description: "order of multimapping alignments in the output files\n\n- Old_2.4\
        \             ... quasi-random order used before 2.5.0\n- Random         \
        \     ... random order of alignments for each multi-mapper. Read mates (pairs)\
        \ are always adjacent, all alignment for each read stay together. This option\
        \ will become default in the future releases."
      example:
      - "Old_2.4"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output: SAM and BAM"
    arguments:
    - type: "string"
      name: "--outSAMtype"
      alternatives: []
      description: "type of SAM/BAM output\n\n1st word:\n- BAM  ... output BAM without\
        \ sorting\n- SAM  ... output SAM without sorting\n- None ... no SAM/BAM output\n\
        2nd, 3rd:\n- Unsorted           ... standard unsorted\n- SortedByCoordinate\
        \ ... sorted by coordinate. This option will allocate extra memory for sorting\
        \ which can be specified by --limitBAMsortRAM."
      example:
      - "SAM"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--outSAMmode"
      alternatives: []
      description: "mode of SAM output\n\n- None ... no SAM output\n- Full ... full\
        \ SAM output\n- NoQS ... full SAM but without quality scores"
      example:
      - "Full"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outSAMstrandField"
      alternatives: []
      description: "Cufflinks-like strand field flag\n\n- None        ... not used\n\
        - intronMotif ... strand derived from the intron motif. This option changes\
        \ the output alignments: reads with inconsistent and/or non-canonical introns\
        \ are filtered out."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outSAMattributes"
      alternatives: []
      description: "a string of desired SAM attributes, in the order desired for the\
        \ output SAM. Tags can be listed in any combination/order.\n\n***Presets:\n\
        - None        ... no attributes\n- Standard    ... NH HI AS nM\n- All    \
        \     ... NH HI AS nM NM MD jM jI MC ch\n***Alignment:\n- NH          ...\
        \ number of loci the reads maps to: =1 for unique mappers, >1 for multimappers.\
        \ Standard SAM tag.\n- HI          ... multiple alignment index, starts with\
        \ --outSAMattrIHstart (=1 by default). Standard SAM tag.\n- AS          ...\
        \ local alignment score, +1/-1 for matches/mismateches, score* penalties for\
        \ indels and gaps. For PE reads, total score for two mates. Stadnard SAM tag.\n\
        - nM          ... number of mismatches. For PE reads, sum over two mates.\n\
        - NM          ... edit distance to the reference (number of mismatched + inserted\
        \ + deleted bases) for each mate. Standard SAM tag.\n- MD          ... string\
        \ encoding mismatched and deleted reference bases (see standard SAM specifications).\
        \ Standard SAM tag.\n- jM          ... intron motifs for all junctions (i.e.\
        \ N in CIGAR): 0: non-canonical; 1: GT/AG, 2: CT/AC, 3: GC/AG, 4: CT/GC, 5:\
        \ AT/AC, 6: GT/AT. If splice junctions database is used, and a junction is\
        \ annotated, 20 is added to its motif value.\n- jI          ... start and\
        \ end of introns for all junctions (1-based).\n- XS          ... alignment\
        \ strand according to --outSAMstrandField.\n- MC          ... mate's CIGAR\
        \ string. Standard SAM tag.\n- ch          ... marks all segment of all chimeric\
        \ alingments for --chimOutType WithinBAM output.\n- cN          ... number\
        \ of bases clipped from the read ends: 5' and 3'\n***Variation:\n- vA    \
        \      ... variant allele\n- vG          ... genomic coordinate of the variant\
        \ overlapped by the read.\n- vW          ... 1 - alignment passes WASP filtering;\
        \ 2,3,4,5,6,7 - alignment does not pass WASP filtering. Requires --waspOutputMode\
        \ SAMtag.\n***STARsolo:\n- CR CY UR UY ... sequences and quality scores of\
        \ cell barcodes and UMIs for the solo* demultiplexing.\n- GX GN       ...\
        \ gene ID and gene name for unique-gene reads.\n- gx gn       ... gene IDs\
        \ and gene names for unique- and multi-gene reads.\n- CB UB       ... error-corrected\
        \ cell barcodes and UMIs for solo* demultiplexing. Requires --outSAMtype BAM\
        \ SortedByCoordinate.\n- sM          ... assessment of CB and UMI.\n- sS \
        \         ... sequence of the entire barcode (CB,UMI,adapter).\n- sQ     \
        \     ... quality of the entire barcode.\n***Unsupported/undocumented:\n-\
        \ ha          ... haplotype (1/2) when mapping to the diploid genome. Requires\
        \ genome generated with --genomeTransformType Diploid .\n- rB          ...\
        \ alignment block read/genomic coordinates.\n- vR          ... read coordinate\
        \ of the variant."
      example:
      - "Standard"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--outSAMattrIHstart"
      alternatives: []
      description: "start value for the IH attribute. 0 may be required by some downstream\
        \ software, such as Cufflinks or StringTie."
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outSAMunmapped"
      alternatives: []
      description: "output of unmapped reads in the SAM format\n\n1st word:\n- None\
        \   ... no output\n- Within ... output unmapped reads within the main SAM\
        \ file (i.e. Aligned.out.sam)\n2nd word:\n- KeepPairs ... record unmapped\
        \ mate for each alignment, and, in case of unsorted output, keep it adjacent\
        \ to its mapped mate. Only affects multi-mapping reads."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--outSAMorder"
      alternatives: []
      description: "type of sorting for the SAM output\n\nPaired: one mate after the\
        \ other for all paired alignments\nPairedKeepInputOrder: one mate after the\
        \ other for all paired alignments, the order is kept the same as in the input\
        \ FASTQ files"
      example:
      - "Paired"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outSAMprimaryFlag"
      alternatives: []
      description: "which alignments are considered primary - all others will be marked\
        \ with 0x100 bit in the FLAG\n\n- OneBestScore ... only one alignment with\
        \ the best score is primary\n- AllBestScore ... all alignments with the best\
        \ score are primary"
      example:
      - "OneBestScore"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outSAMreadID"
      alternatives: []
      description: "read ID record type\n\n- Standard ... first word (until space)\
        \ from the FASTx read ID line, removing /1,/2 from the end\n- Number   ...\
        \ read number (index) in the FASTx file"
      example:
      - "Standard"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outSAMmapqUnique"
      alternatives: []
      description: "0 to 255: the MAPQ value for unique mappers"
      example:
      - 255
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outSAMflagOR"
      alternatives: []
      description: "0 to 65535: sam FLAG will be bitwise OR'd with this value, i.e.\
        \ FLAG=FLAG | outSAMflagOR. This is applied after all flags have been set\
        \ by STAR, and after outSAMflagAND. Can be used to set specific bits that\
        \ are not set otherwise."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outSAMflagAND"
      alternatives: []
      description: "0 to 65535: sam FLAG will be bitwise AND'd with this value, i.e.\
        \ FLAG=FLAG & outSAMflagOR. This is applied after all flags have been set\
        \ by STAR, but before outSAMflagOR. Can be used to unset specific bits that\
        \ are not set otherwise."
      example:
      - 65535
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outSAMattrRGline"
      alternatives: []
      description: "SAM/BAM read group line. The first word contains the read group\
        \ identifier and must start with \"ID:\", e.g. --outSAMattrRGline ID:xxx CN:yy\
        \ \"DS:z z z\".\n\nxxx will be added as RG tag to each output alignment. Any\
        \ spaces in the tag values have to be double quoted.\nComma separated RG lines\
        \ correspons to different (comma separated) input files in --readFilesIn.\
        \ Commas have to be surrounded by spaces, e.g.\n--outSAMattrRGline ID:xxx\
        \ , ID:zzz \"DS:z z\" , ID:yyy DS:yyyy"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--outSAMheaderHD"
      alternatives: []
      description: "@HD (header) line of the SAM header"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--outSAMheaderPG"
      alternatives: []
      description: "extra @PG (software) line of the SAM header (in addition to STAR)"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--outSAMheaderCommentFile"
      alternatives: []
      description: "path to the file with @CO (comment) lines of the SAM header"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outSAMfilter"
      alternatives: []
      description: "filter the output into main SAM/BAM files\n\n- KeepOnlyAddedReferences\
        \ ... only keep the reads for which all alignments are to the extra reference\
        \ sequences added with --genomeFastaFiles at the mapping stage.\n- KeepAllAddedReferences\
        \ ...  keep all alignments to the extra reference sequences added with --genomeFastaFiles\
        \ at the mapping stage."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--outSAMmultNmax"
      alternatives: []
      description: "max number of multiple alignments for a read that will be output\
        \ to the SAM/BAM files. Note that if this value is not equal to -1, the top\
        \ scoring alignment will be output first\n\n- -1 ... all alignments (up to\
        \ --outFilterMultimapNmax) will be output"
      example:
      - -1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outSAMtlen"
      alternatives: []
      description: "calculation method for the TLEN field in the SAM/BAM files\n\n\
        - 1 ... leftmost base of the (+)strand mate to rightmost base of the (-)mate.\
        \ (+)sign for the (+)strand mate\n- 2 ... leftmost base of any mate to rightmost\
        \ base of any mate. (+)sign for the mate with the leftmost base. This is different\
        \ from 1 for overlapping mates with protruding ends"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outBAMcompression"
      alternatives: []
      description: "-1 to 10  BAM compression level, -1=default compression (6?),\
        \ 0=no compression, 10=maximum compression"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outBAMsortingThreadN"
      alternatives: []
      description: ">=0: number of threads for BAM sorting. 0 will default to min(6,--runThreadN)."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outBAMsortingBinsN"
      alternatives: []
      description: ">0:  number of genome bins for coordinate-sorting"
      example:
      - 50
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "BAM processing"
    arguments:
    - type: "string"
      name: "--bamRemoveDuplicatesType"
      alternatives: []
      description: "mark duplicates in the BAM file, for now only works with (i) sorted\
        \ BAM fed with inputBAMfile, and (ii) for paired-end alignments only\n\n-\
        \ -                       ... no duplicate removal/marking\n- UniqueIdentical\
        \         ... mark all multimappers, and duplicate unique mappers. The coordinates,\
        \ FLAG, CIGAR must be identical\n- UniqueIdenticalNotMulti  ... mark duplicate\
        \ unique mappers but not multimappers."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--bamRemoveDuplicatesMate2basesN"
      alternatives: []
      description: "number of bases from the 5' of mate 2 to use in collapsing (e.g.\
        \ for RAMPAGE)"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output Wiggle"
    arguments:
    - type: "string"
      name: "--outWigType"
      alternatives: []
      description: "type of signal output, e.g. \"bedGraph\" OR \"bedGraph read1_5p\"\
        . Requires sorted BAM: --outSAMtype BAM SortedByCoordinate .\n\n1st word:\n\
        - None       ... no signal output\n- bedGraph   ... bedGraph format\n- wiggle\
        \     ... wiggle format\n2nd word:\n- read1_5p   ... signal from only 5' of\
        \ the 1st read, useful for CAGE/RAMPAGE etc\n- read2      ... signal from\
        \ only 2nd read"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--outWigStrand"
      alternatives: []
      description: "strandedness of wiggle/bedGraph output\n\n- Stranded   ...  separate\
        \ strands, str1 and str2\n- Unstranded ...  collapsed strands"
      example:
      - "Stranded"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outWigReferencesPrefix"
      alternatives: []
      description: "prefix matching reference names to include in the output wiggle\
        \ file, e.g. \"chr\", default \"-\" - include all references"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outWigNorm"
      alternatives: []
      description: "type of normalization for the signal\n\n- RPM    ... reads per\
        \ million of mapped reads\n- None   ... no normalization, \"raw\" counts"
      example:
      - "RPM"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output Filtering"
    arguments:
    - type: "string"
      name: "--outFilterType"
      alternatives: []
      description: "type of filtering\n\n- Normal  ... standard filtering using only\
        \ current alignment\n- BySJout ... keep only those reads that contain junctions\
        \ that passed filtering into SJ.out.tab"
      example:
      - "Normal"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outFilterMultimapScoreRange"
      alternatives: []
      description: "the score range below the maximum score for multimapping alignments"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outFilterMultimapNmax"
      alternatives: []
      description: "maximum number of loci the read is allowed to map to. Alignments\
        \ (all of them) will be output only if the read maps to no more loci than\
        \ this value.\n\nOtherwise no alignments will be output, and the read will\
        \ be counted as \"mapped to too many loci\" in the Log.final.out ."
      example:
      - 10
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outFilterMismatchNmax"
      alternatives: []
      description: "alignment will be output only if it has no more mismatches than\
        \ this value."
      example:
      - 10
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--outFilterMismatchNoverLmax"
      alternatives: []
      description: "alignment will be output only if its ratio of mismatches to *mapped*\
        \ length is less than or equal to this value."
      example:
      - 0.3
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--outFilterMismatchNoverReadLmax"
      alternatives: []
      description: "alignment will be output only if its ratio of mismatches to *read*\
        \ length is less than or equal to this value."
      example:
      - 1.0
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outFilterScoreMin"
      alternatives: []
      description: "alignment will be output only if its score is higher than or equal\
        \ to this value."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--outFilterScoreMinOverLread"
      alternatives: []
      description: "same as outFilterScoreMin, but normalized to read length (sum\
        \ of mates' lengths for paired-end reads)"
      example:
      - 0.66
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outFilterMatchNmin"
      alternatives: []
      description: "alignment will be output only if the number of matched bases is\
        \ higher than or equal to this value."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--outFilterMatchNminOverLread"
      alternatives: []
      description: "sam as outFilterMatchNmin, but normalized to the read length (sum\
        \ of mates' lengths for paired-end reads)."
      example:
      - 0.66
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outFilterIntronMotifs"
      alternatives: []
      description: "filter alignment using their motifs\n\n- None                \
        \           ... no filtering\n- RemoveNoncanonical             ... filter\
        \ out alignments that contain non-canonical junctions\n- RemoveNoncanonicalUnannotated\
        \  ... filter out alignments that contain non-canonical unannotated junctions\
        \ when using annotated splice junctions database. The annotated non-canonical\
        \ junctions will be kept."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--outFilterIntronStrands"
      alternatives: []
      description: "filter alignments\n\n- RemoveInconsistentStrands      ... remove\
        \ alignments that have junctions with inconsistent strands\n- None       \
        \                    ... no filtering"
      example:
      - "RemoveInconsistentStrands"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output splice junctions (SJ.out.tab)"
    arguments:
    - type: "string"
      name: "--outSJtype"
      alternatives: []
      description: "type of splice junction output\n\n- Standard    ... standard SJ.out.tab\
        \ output\n- None        ... no splice junction output"
      example:
      - "Standard"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output Filtering: Splice Junctions"
    arguments:
    - type: "string"
      name: "--outSJfilterReads"
      alternatives: []
      description: "which reads to consider for collapsed splice junctions output\n\
        \n- All     ... all reads, unique- and multi-mappers\n- Unique  ... uniquely\
        \ mapping reads only"
      example:
      - "All"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--outSJfilterOverhangMin"
      alternatives: []
      description: "minimum overhang length for splice junctions on both sides for:\
        \ (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC\
        \ motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif\n\n\
        does not apply to annotated junctions"
      example:
      - 30
      - 12
      - 12
      - 12
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--outSJfilterCountUniqueMin"
      alternatives: []
      description: "minimum uniquely mapping read count per junction for: (1) non-canonical\
        \ motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC motif, (4) AT/AC\
        \ and GT/AT motif. -1 means no output for that motif\n\nJunctions are output\
        \ if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin conditions\
        \ are satisfied\ndoes not apply to annotated junctions"
      example:
      - 3
      - 1
      - 1
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--outSJfilterCountTotalMin"
      alternatives: []
      description: "minimum total (multi-mapping+unique) read count per junction for:\
        \ (1) non-canonical motifs, (2) GT/AG and CT/AC motif, (3) GC/AG and CT/GC\
        \ motif, (4) AT/AC and GT/AT motif. -1 means no output for that motif\n\n\
        Junctions are output if one of outSJfilterCountUniqueMin OR outSJfilterCountTotalMin\
        \ conditions are satisfied\ndoes not apply to annotated junctions"
      example:
      - 3
      - 1
      - 1
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--outSJfilterDistToOtherSJmin"
      alternatives: []
      description: "minimum allowed distance to other junctions' donor/acceptor\n\n\
        does not apply to annotated junctions"
      example:
      - 10
      - 0
      - 5
      - 10
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--outSJfilterIntronMaxVsReadN"
      alternatives: []
      description: "maximum gap allowed for junctions supported by 1,2,3,,,N reads\n\
        \ni.e. by default junctions supported by 1 read can have gaps <=50000b, by\
        \ 2 reads: <=100000b, by 3 reads: <=200000. by >=4 reads any gap <=alignIntronMax\n\
        does not apply to annotated junctions"
      example:
      - 50000
      - 100000
      - 200000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "Scoring"
    arguments:
    - type: "integer"
      name: "--scoreGap"
      alternatives: []
      description: "splice junction penalty (independent on intron motif)"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreGapNoncan"
      alternatives: []
      description: "non-canonical junction penalty (in addition to scoreGap)"
      example:
      - -8
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreGapGCAG"
      alternatives: []
      description: "GC/AG and CT/GC junction penalty (in addition to scoreGap)"
      example:
      - -4
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreGapATAC"
      alternatives: []
      description: "AT/AC  and GT/AT junction penalty  (in addition to scoreGap)"
      example:
      - -8
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreGenomicLengthLog2scale"
      alternatives: []
      description: "extra score logarithmically scaled with genomic length of the\
        \ alignment: scoreGenomicLengthLog2scale*log2(genomicLength)"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreDelOpen"
      alternatives: []
      description: "deletion open penalty"
      example:
      - -2
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreDelBase"
      alternatives: []
      description: "deletion extension penalty per base (in addition to scoreDelOpen)"
      example:
      - -2
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreInsOpen"
      alternatives: []
      description: "insertion open penalty"
      example:
      - -2
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreInsBase"
      alternatives: []
      description: "insertion extension penalty per base (in addition to scoreInsOpen)"
      example:
      - -2
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--scoreStitchSJshift"
      alternatives: []
      description: "maximum score reduction while searching for SJ boundaries in the\
        \ stitching step"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Alignments and Seeding"
    arguments:
    - type: "integer"
      name: "--seedSearchStartLmax"
      alternatives: []
      description: "defines the search start point through the read - the read is\
        \ split into pieces no longer than this value"
      example:
      - 50
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--seedSearchStartLmaxOverLread"
      alternatives: []
      description: "seedSearchStartLmax normalized to read length (sum of mates' lengths\
        \ for paired-end reads)"
      example:
      - 1.0
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seedSearchLmax"
      alternatives: []
      description: "defines the maximum length of the seeds, if =0 seed length is\
        \ not limited"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seedMultimapNmax"
      alternatives: []
      description: "only pieces that map fewer than this value are utilized in the\
        \ stitching procedure"
      example:
      - 10000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seedPerReadNmax"
      alternatives: []
      description: "max number of seeds per read"
      example:
      - 1000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seedPerWindowNmax"
      alternatives: []
      description: "max number of seeds per window"
      example:
      - 50
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seedNoneLociPerWindow"
      alternatives: []
      description: "max number of one seed loci per window"
      example:
      - 10
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seedSplitMin"
      alternatives: []
      description: "min length of the seed sequences split by Ns or mate gap"
      example:
      - 12
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--seedMapMin"
      alternatives: []
      description: "min length of seeds to be mapped"
      example:
      - 5
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignIntronMin"
      alternatives: []
      description: "minimum intron size, genomic gap is considered intron if its length>=alignIntronMin,\
        \ otherwise it is considered Deletion"
      example:
      - 21
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignIntronMax"
      alternatives: []
      description: "maximum intron size, if 0, max intron size will be determined\
        \ by (2^winBinNbits)*winAnchorDistNbins"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignMatesGapMax"
      alternatives: []
      description: "maximum gap between two mates, if 0, max intron gap will be determined\
        \ by (2^winBinNbits)*winAnchorDistNbins"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignSJoverhangMin"
      alternatives: []
      description: "minimum overhang (i.e. block size) for spliced alignments"
      example:
      - 5
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignSJstitchMismatchNmax"
      alternatives: []
      description: "maximum number of mismatches for stitching of the splice junctions\
        \ (-1: no limit).\n\n(1) non-canonical motifs, (2) GT/AG and CT/AC motif,\
        \ (3) GC/AG and CT/GC motif, (4) AT/AC and GT/AT motif."
      example:
      - 0
      - -1
      - 0
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--alignSJDBoverhangMin"
      alternatives: []
      description: "minimum overhang (i.e. block size) for annotated (sjdb) spliced\
        \ alignments"
      example:
      - 3
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignSplicedMateMapLmin"
      alternatives: []
      description: "minimum mapped length for a read mate that is spliced"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--alignSplicedMateMapLminOverLmate"
      alternatives: []
      description: "alignSplicedMateMapLmin normalized to mate length"
      example:
      - 0.66
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignWindowsPerReadNmax"
      alternatives: []
      description: "max number of windows per read"
      example:
      - 10000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignTranscriptsPerWindowNmax"
      alternatives: []
      description: "max number of transcripts per window"
      example:
      - 100
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--alignTranscriptsPerReadNmax"
      alternatives: []
      description: "max number of different alignments per read to consider"
      example:
      - 10000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--alignEndsType"
      alternatives: []
      description: "type of read ends alignment\n\n- Local             ... standard\
        \ local alignment with soft-clipping allowed\n- EndToEnd          ... force\
        \ end-to-end read alignment, do not soft-clip\n- Extend5pOfRead1   ... fully\
        \ extend only the 5p of the read1, all other ends: local alignment\n- Extend5pOfReads12\
        \ ... fully extend only the 5p of the both read1 and read2, all other ends:\
        \ local alignment"
      example:
      - "Local"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--alignEndsProtrude"
      alternatives: []
      description: "allow protrusion of alignment ends, i.e. start (end) of the +strand\
        \ mate downstream of the start (end) of the -strand mate\n\n1st word: int:\
        \ maximum number of protrusion bases allowed\n2nd word: string:\n-       \
        \              ConcordantPair ... report alignments with non-zero protrusion\
        \ as concordant pairs\n-                     DiscordantPair ... report alignments\
        \ with non-zero protrusion as discordant pairs"
      example:
      - "0    ConcordantPair"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--alignSoftClipAtReferenceEnds"
      alternatives: []
      description: "allow the soft-clipping of the alignments past the end of the\
        \ chromosomes\n\n- Yes ... allow\n- No  ... prohibit, useful for compatibility\
        \ with Cufflinks"
      example:
      - "Yes"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--alignInsertionFlush"
      alternatives: []
      description: "how to flush ambiguous insertion positions\n\n- None    ... insertions\
        \ are not flushed\n- Right   ... insertions are flushed to the right"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Paired-End reads"
    arguments:
    - type: "integer"
      name: "--peOverlapNbasesMin"
      alternatives: []
      description: "minimum number of overlapping bases to trigger mates merging and\
        \ realignment. Specify >0 value to switch on the \"merginf of overlapping\
        \ mates\" algorithm."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--peOverlapMMp"
      alternatives: []
      description: "maximum proportion of mismatched bases in the overlap area"
      example:
      - 0.01
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Windows, Anchors, Binning"
    arguments:
    - type: "integer"
      name: "--winAnchorMultimapNmax"
      alternatives: []
      description: "max number of loci anchors are allowed to map to"
      example:
      - 50
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--winBinNbits"
      alternatives: []
      description: "=log2(winBin), where winBin is the size of the bin for the windows/clustering,\
        \ each window will occupy an integer number of bins."
      example:
      - 16
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--winAnchorDistNbins"
      alternatives: []
      description: "max number of bins between two anchors that allows aggregation\
        \ of anchors into one window"
      example:
      - 9
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--winFlankNbins"
      alternatives: []
      description: "log2(winFlank), where win Flank is the size of the left and right\
        \ flanking regions for each window"
      example:
      - 4
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--winReadCoverageRelativeMin"
      alternatives: []
      description: "minimum relative coverage of the read sequence by the seeds in\
        \ a window, for STARlong algorithm only."
      example:
      - 0.5
      default: []
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--winReadCoverageBasesMin"
      alternatives: []
      description: "minimum number of bases covered by the seeds in a window , for\
        \ STARlong algorithm only."
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Chimeric Alignments"
    arguments:
    - type: "string"
      name: "--chimOutType"
      alternatives: []
      description: "type of chimeric output\n\n- Junctions       ... Chimeric.out.junction\n\
        - SeparateSAMold  ... output old SAM into separate Chimeric.out.sam file\n\
        - WithinBAM       ... output into main aligned BAM files (Aligned.*.bam)\n\
        - WithinBAM HardClip  ... (default) hard-clipping in the CIGAR for supplemental\
        \ chimeric alignments (default if no 2nd word is present)\n- WithinBAM SoftClip\
        \  ... soft-clipping in the CIGAR for supplemental chimeric alignments"
      example:
      - "Junctions"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--chimSegmentMin"
      alternatives: []
      description: "minimum length of chimeric segment length, if ==0, no chimeric\
        \ output"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimScoreMin"
      alternatives: []
      description: "minimum total (summed) score of the chimeric segments"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimScoreDropMax"
      alternatives: []
      description: "max drop (difference) of chimeric score (the sum of scores of\
        \ all chimeric segments) from the read length"
      example:
      - 20
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimScoreSeparation"
      alternatives: []
      description: "minimum difference (separation) between the best chimeric score\
        \ and the next one"
      example:
      - 10
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimScoreJunctionNonGTAG"
      alternatives: []
      description: "penalty for a non-GT/AG chimeric junction"
      example:
      - -1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimJunctionOverhangMin"
      alternatives: []
      description: "minimum overhang for a chimeric junction"
      example:
      - 20
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimSegmentReadGapMax"
      alternatives: []
      description: "maximum gap in the read sequence between chimeric segments"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--chimFilter"
      alternatives: []
      description: "different filters for chimeric alignments\n\n- None ... no filtering\n\
        - banGenomicN ... Ns are not allowed in the genome sequence around the chimeric\
        \ junction"
      example:
      - "banGenomicN"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--chimMainSegmentMultNmax"
      alternatives: []
      description: "maximum number of multi-alignments for the main chimeric segment.\
        \ =1 will prohibit multimapping main segments."
      example:
      - 10
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimMultimapNmax"
      alternatives: []
      description: "maximum number of chimeric multi-alignments\n\n- 0 ... use the\
        \ old scheme for chimeric detection which only considered unique alignments"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimMultimapScoreRange"
      alternatives: []
      description: "the score range for multi-mapping chimeras below the best chimeric\
        \ score. Only works with --chimMultimapNmax > 1"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimNonchimScoreDropMin"
      alternatives: []
      description: "to trigger chimeric detection, the drop in the best non-chimeric\
        \ alignment score with respect to the read length has to be greater than this\
        \ value"
      example:
      - 20
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--chimOutJunctionFormat"
      alternatives: []
      description: "formatting type for the Chimeric.out.junction file\n\n- 0 ...\
        \ no comment lines/headers\n- 1 ... comment lines at the end of the file:\
        \ command line and Nreads: total, unique/multi-mapping"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Quantification of Annotations"
    arguments:
    - type: "string"
      name: "--quantMode"
      alternatives: []
      description: "types of quantification requested\n\n- -                ... none\n\
        - TranscriptomeSAM ... output SAM/BAM alignments to transcriptome into a separate\
        \ file\n- GeneCounts       ... count reads per gene"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--quantTranscriptomeBAMcompression"
      alternatives: []
      description: "-2 to 10  transcriptome BAM compression level\n\n- -2  ... no\
        \ BAM output\n- -1  ... default compression (6?)\n-  0  ... no compression\n\
        -  10 ... maximum compression"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--quantTranscriptomeBan"
      alternatives: []
      description: "prohibit various alignment type\n\n- IndelSoftclipSingleend  ...\
        \ prohibit indels, soft clipping and single-end alignments - compatible with\
        \ RSEM\n- Singleend               ... prohibit single-end alignments"
      example:
      - "IndelSoftclipSingleend"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "2-pass Mapping"
    arguments:
    - type: "string"
      name: "--twopassMode"
      alternatives: []
      description: "2-pass mapping mode.\n\n- None        ... 1-pass mapping\n- Basic\
        \       ... basic 2-pass mapping, with all 1st pass junctions inserted into\
        \ the genome indices on the fly"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--twopass1readsN"
      alternatives: []
      description: "number of reads to process for the 1st step. Use very large number\
        \ (or default -1) to map all reads in the first step."
      example:
      - -1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "WASP parameters"
    arguments:
    - type: "string"
      name: "--waspOutputMode"
      alternatives: []
      description: "WASP allele-specific output type. This is re-implementation of\
        \ the original WASP mappability filtering by Bryce van de Geijn, Graham McVicker,\
        \ Yoav Gilad & Jonathan K Pritchard. Please cite the original WASP paper:\
        \ Nature Methods 12, 1061–1063 (2015), https://www.nature.com/articles/nmeth.3582\
        \ .\n\n- SAMtag      ... add WASP tags to the alignments that pass WASP filtering"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "STARsolo (single cell RNA-seq) parameters"
    arguments:
    - type: "string"
      name: "--soloType"
      alternatives: []
      description: "type of single-cell RNA-seq\n\n- CB_UMI_Simple   ... (a.k.a. Droplet)\
        \ one UMI and one Cell Barcode of fixed length in read2, e.g. Drop-seq and\
        \ 10X Chromium.\n- CB_UMI_Complex  ... multiple Cell Barcodes of varying length,\
        \ one UMI of fixed length and one adapter sequence of fixed length are allowed\
        \ in read2 only (e.g. inDrop, ddSeq).\n- CB_samTagOut    ... output Cell Barcode\
        \ as CR and/or CB SAm tag. No UMI counting. --readFilesIn cDNA_read1 [cDNA_read2\
        \ if paired-end] CellBarcode_read . Requires --outSAMtype BAM Unsorted [and/or\
        \ SortedByCoordinate]\n- SmartSeq        ... Smart-seq: each cell in a separate\
        \ FASTQ (paired- or single-end), barcodes are corresponding read-groups, no\
        \ UMI sequences, alignments deduplicated according to alignment start and\
        \ end (after extending soft-clipped bases)"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloCBwhitelist"
      alternatives: []
      description: "file(s) with whitelist(s) of cell barcodes. Only --soloType CB_UMI_Complex\
        \ allows more than one whitelist file.\n\n- None            ... no whitelist:\
        \ all cell barcodes are allowed"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "integer"
      name: "--soloCBstart"
      alternatives: []
      description: "cell barcode start base"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--soloCBlen"
      alternatives: []
      description: "cell barcode length"
      example:
      - 16
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--soloUMIstart"
      alternatives: []
      description: "UMI start base"
      example:
      - 17
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--soloUMIlen"
      alternatives: []
      description: "UMI length"
      example:
      - 10
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--soloBarcodeReadLength"
      alternatives: []
      description: "length of the barcode read\n\n- 1   ... equal to sum of soloCBlen+soloUMIlen\n\
        - 0   ... not defined, do not check"
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--soloBarcodeMate"
      alternatives: []
      description: "identifies which read mate contains the barcode (CB+UMI) sequence\n\
        \n- 0   ... barcode sequence is on separate read, which should always be the\
        \ last file in the --readFilesIn listed\n- 1   ... barcode sequence is a part\
        \ of mate 1\n- 2   ... barcode sequence is a part of mate 2"
      example:
      - 0
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--soloCBposition"
      alternatives: []
      description: "position of Cell Barcode(s) on the barcode read.\n\nPresently\
        \ only works with --soloType CB_UMI_Complex, and barcodes are assumed to be\
        \ on Read2.\nFormat for each barcode: startAnchor_startPosition_endAnchor_endPosition\n\
        start(end)Anchor defines the Anchor Base for the CB: 0: read start; 1: read\
        \ end; 2: adapter start; 3: adapter end\nstart(end)Position is the 0-based\
        \ position with of the CB start(end) with respect to the Anchor Base\nString\
        \ for different barcodes are separated by space.\nExample: inDrop (Zilionis\
        \ et al, Nat. Protocols, 2017):\n--soloCBposition  0_0_2_-1  3_1_3_8"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloUMIposition"
      alternatives: []
      description: "position of the UMI on the barcode read, same as soloCBposition\n\
        \nExample: inDrop (Zilionis et al, Nat. Protocols, 2017):\n--soloCBposition\
        \  3_9_3_14"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--soloAdapterSequence"
      alternatives: []
      description: "adapter sequence to anchor barcodes. Only one adapter sequence\
        \ is allowed."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--soloAdapterMismatchesNmax"
      alternatives: []
      description: "maximum number of mismatches allowed in adapter sequence."
      example:
      - 1
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--soloCBmatchWLtype"
      alternatives: []
      description: "matching the Cell Barcodes to the WhiteList\n\n- Exact       \
        \                    ... only exact matches allowed\n- 1MM               \
        \              ... only one match in whitelist with 1 mismatched base allowed.\
        \ Allowed CBs have to have at least one read with exact match.\n- 1MM_multi\
        \                       ... multiple matches in whitelist with 1 mismatched\
        \ base allowed, posterior probability calculation is used choose one of the\
        \ matches.\nAllowed CBs have to have at least one read with exact match. This\
        \ option matches best with CellRanger 2.2.0\n- 1MM_multi_pseudocounts    \
        \      ... same as 1MM_Multi, but pseudocounts of 1 are added to all whitelist\
        \ barcodes.\n- 1MM_multi_Nbase_pseudocounts    ... same as 1MM_multi_pseudocounts,\
        \ multimatching to WL is allowed for CBs with N-bases. This option matches\
        \ best with CellRanger >= 3.0.0\n- EditDist_2                    ... allow\
        \ up to edit distance of 3 fpr each of the barcodes. May include one deletion\
        \ + one insertion. Only works with --soloType CB_UMI_Complex. Matches to multiple\
        \ passlist barcdoes are not allowed. Similar to ParseBio Split-seq pipeline."
      example:
      - "1MM_multi"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--soloInputSAMattrBarcodeSeq"
      alternatives: []
      description: "when inputting reads from a SAM file (--readsFileType SAM SE/PE),\
        \ these SAM attributes mark the barcode sequence (in proper order).\n\nFor\
        \ instance, for 10X CellRanger or STARsolo BAMs, use --soloInputSAMattrBarcodeSeq\
        \ CR UR .\nThis parameter is required when running STARsolo with input from\
        \ SAM."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloInputSAMattrBarcodeQual"
      alternatives: []
      description: "when inputting reads from a SAM file (--readsFileType SAM SE/PE),\
        \ these SAM attributes mark the barcode qualities (in proper order).\n\nFor\
        \ instance, for 10X CellRanger or STARsolo BAMs, use --soloInputSAMattrBarcodeQual\
        \ CY UY .\nIf this parameter is '-' (default), the quality 'H' will be assigned\
        \ to all bases."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloStrand"
      alternatives: []
      description: "strandedness of the solo libraries:\n\n- Unstranded  ... no strand\
        \ information\n- Forward     ... read strand same as the original RNA molecule\n\
        - Reverse     ... read strand opposite to the original RNA molecule"
      example:
      - "Forward"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--soloFeatures"
      alternatives: []
      description: "genomic features for which the UMI counts per Cell Barcode are\
        \ collected\n\n- Gene            ... genes: reads match the gene transcript\n\
        - SJ              ... splice junctions: reported in SJ.out.tab\n- GeneFull\
        \        ... full gene (pre-mRNA): count all reads overlapping genes' exons\
        \ and introns\n- GeneFull_ExonOverIntron ... full gene (pre-mRNA): count all\
        \ reads overlapping genes' exons and introns: prioritize 100% overlap with\
        \ exons\n- GeneFull_Ex50pAS        ... full gene (pre-RNA): count all reads\
        \ overlapping genes' exons and introns: prioritize >50% overlap with exons.\
        \ Do not count reads with 100% exonic overlap in the antisense direction."
      example:
      - "Gene"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloMultiMappers"
      alternatives: []
      description: "counting method for reads mapping to multiple genes\n\n- Unique\
        \     ... count only reads that map to unique genes\n- Uniform    ... uniformly\
        \ distribute multi-genic UMIs to all genes\n- Rescue     ... distribute UMIs\
        \ proportionally to unique+uniform counts (~ first iteration of EM)\n- PropUnique\
        \ ... distribute UMIs proportionally to unique mappers, if present, and uniformly\
        \ if not.\n- EM         ... multi-gene UMIs are distributed using Expectation\
        \ Maximization algorithm"
      example:
      - "Unique"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloUMIdedup"
      alternatives: []
      description: "type of UMI deduplication (collapsing) algorithm\n\n- 1MM_All\
        \                     ... all UMIs with 1 mismatch distance to each other\
        \ are collapsed (i.e. counted once).\n- 1MM_Directional_UMItools    ... follows\
        \ the \"directional\" method from the UMI-tools by Smith, Heger and Sudbery\
        \ (Genome Research 2017).\n- 1MM_Directional             ... same as 1MM_Directional_UMItools,\
        \ but with more stringent criteria for duplicate UMIs\n- Exact           \
        \            ... only exactly matching UMIs are collapsed.\n- NoDedup    \
        \                 ... no deduplication of UMIs, count all reads.\n- 1MM_CR\
        \                      ... CellRanger2-4 algorithm for 1MM UMI collapsing."
      example:
      - "1MM_All"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloUMIfiltering"
      alternatives: []
      description: "type of UMI filtering (for reads uniquely mapping to genes)\n\n\
        - -                  ... basic filtering: remove UMIs with N and homopolymers\
        \ (similar to CellRanger 2.2.0).\n- MultiGeneUMI       ... basic + remove\
        \ lower-count UMIs that map to more than one gene.\n- MultiGeneUMI_All   ...\
        \ basic + remove all UMIs that map to more than one gene.\n- MultiGeneUMI_CR\
        \    ... basic + remove lower-count UMIs that map to more than one gene, matching\
        \ CellRanger > 3.0.0 .\nOnly works with --soloUMIdedup 1MM_CR"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloOutFileNames"
      alternatives: []
      description: "file names for STARsolo output:\n\nfile_name_prefix   gene_names\
        \   barcode_sequences   cell_feature_count_matrix"
      example:
      - "Solo.out/"
      - "features.tsv"
      - "barcodes.tsv"
      - "matrix.mtx"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloCellFilter"
      alternatives: []
      description: "cell filtering type and parameters\n\n- None            ... do\
        \ not output filtered cells\n- TopCells        ... only report top cells by\
        \ UMI count, followed by the exact number of cells\n- CellRanger2.2   ...\
        \ simple filtering of CellRanger 2.2.\nCan be followed by numbers: number\
        \ of expected cells, robust maximum percentile for UMI count, maximum to minimum\
        \ ratio for UMI count\nThe harcoded values are from CellRanger: nExpectedCells=3000;\
        \  maxPercentile=0.99;  maxMinRatio=10\n- EmptyDrops_CR   ... EmptyDrops filtering\
        \ in CellRanger flavor. Please cite the original EmptyDrops paper: A.T.L Lun\
        \ et al, Genome Biology, 20, 63 (2019): https://genomebiology.biomedcentral.com/articles/10.1186/s13059-019-1662-y\n\
        Can be followed by 10 numeric parameters:  nExpectedCells   maxPercentile\
        \   maxMinRatio   indMin   indMax   umiMin   umiMinFracMedian   candMaxN \
        \  FDR   simN\nThe harcoded values are from CellRanger:             3000 \
        \           0.99            10    45000    90000      500               0.01\
        \      20000  0.01  10000"
      example:
      - "CellRanger2.2"
      - "3000"
      - "0.99"
      - "10"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloOutFormatFeaturesGeneField3"
      alternatives: []
      description: "field 3 in the Gene features.tsv file. If \"-\", then no 3rd field\
        \ is output."
      example:
      - "Gene Expression"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--soloCellReadStats"
      alternatives: []
      description: "Output reads statistics for each CB\n\n- Standard    ... standard\
        \ output"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "../star_align/script.py"
    is_executable: true
  description: "Align fastq files using STAR."
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/cellranger_tiny_fastq"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "docker"
    label: []
    add: []
    copy: []
    run: []
    build_args: []
    env:
    - "STAR_VERSION 2.7.3a"
    - "PACKAGES gcc g++ make wget zlib1g-dev unzip"
  - type: "docker"
    label: []
    add: []
    copy: []
    run:
    - "apt-get update && \\\n  apt-get install -y --no-install-recommends ${PACKAGES}\
      \ && \\\n  cd /tmp && \\\n  wget --no-check-certificate https://github.com/alexdobin/STAR/archive/refs/tags/${STAR_VERSION}.zip\
      \ && \\\n  unzip ${STAR_VERSION}.zip && \\\n  cd STAR-${STAR_VERSION}/source\
      \ && \\\n  make STARstatic CXXFLAGS_SIMD=-std=c++11 && \\\n  cp STAR /usr/local/bin\
      \ && \\\n  cd / && \\\n  rm -rf /tmp/STAR-${STAR_VERSION} /tmp/${STAR_VERSION}.zip\
      \ && \\\n  apt-get --purge autoremove -y ${PACKAGES} && \\\n  apt-get clean\n"
    build_args: []
    env: []
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highmem"
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/mapping/star_align_v273a/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/mapping/star_align_v273a"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/mapping/star_align_v273a/star_align_v273a"
  viash_version: "0.7.0"
  git_commit: "79131063f70d256bcdd4e47f0572f968cc71938b"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
