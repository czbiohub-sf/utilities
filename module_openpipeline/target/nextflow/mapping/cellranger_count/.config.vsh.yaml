functionality:
  name: "cellranger_count"
  namespace: "mapping"
  version: "main_build"
  authors:
  - name: "Angela Pisco"
    roles:
    - "author"
    props:
      github: "aopisco"
      orcid: "0000-0003-0142-2355"
  - name: "Samuel D'Souza"
    roles:
    - "author"
    props:
      github: "srdsam"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "author"
    - "maintainer"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  arguments: []
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      alternatives: []
      description: "The fastq.gz files to align. Can also be a single directory containing\
        \ fastq.gz files."
      example:
      - "sample_S1_L001_R1_001.fastq.gz"
      - "sample_S1_L001_R2_001.fastq.gz"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--reference"
      alternatives: []
      description: "The path to Cell Ranger reference tar.gz file. Can also be a directory."
      example:
      - "reference.tar.gz"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      alternatives: []
      description: "The folder to store the alignment results."
      example:
      - "/path/to/output"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "integer"
      name: "--expect_cells"
      alternatives: []
      description: "Expected number of recovered cells, used as input to cell calling\
        \ algorithm."
      example:
      - 3000
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--chemistry"
      alternatives: []
      description: "Assay configuration.\n- auto: autodetect mode\n- threeprime: Single\
        \ Cell 3'\n- fiveprime: Single Cell 5'\n- SC3Pv1: Single Cell 3' v1\n- SC3Pv2:\
        \ Single Cell 3' v2\n- SC3Pv3: Single Cell 3' v3\n- SC3Pv3LT: Single Cell\
        \ 3' v3 LT\n- SC3Pv3HT: Single Cell 3' v3 HT\n- SC5P-PE: Single Cell 5' paired-end\n\
        - SC5P-R2: Single Cell 5' R2-only\n- SC-FB: Single Cell Antibody-only 3' v2\
        \ or 5'\nSee https://kb.10xgenomics.com/hc/en-us/articles/115003764132-How-does-Cell-Ranger-auto-detect-chemistry-\
        \ for more information.\n"
      example: []
      default:
      - "auto"
      required: false
      choices:
      - "auto"
      - "threeprime"
      - "fiveprime"
      - "SC3Pv1"
      - "SC3Pv2"
      - "SC3Pv3"
      - "SC3Pv3LT"
      - "SC3Pv3HT"
      - "SC5P-PE"
      - "SC5P-R2"
      - "SC-FB"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--secondary_analysis"
      alternatives: []
      description: "Whether or not to run the secondary analysis e.g. clustering."
      example: []
      default:
      - false
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--generate_bam"
      alternatives: []
      description: "Whether to generate a BAM file."
      example: []
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--include_introns"
      alternatives: []
      description: "Include intronic reads in count (default=true unless --target-panel\
        \ is specified in which case default=false)"
      example: []
      default:
      - true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "bash_script"
    path: "script.sh"
    is_executable: true
  description: "Align fastq files using Cell Ranger count."
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/cellranger_tiny_fastq"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/data-intuitive/cellranger:7.0"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "docker"
    label: []
    add: []
    copy: []
    run:
    - "apt update && apt upgrade -y"
    build_args: []
    env: []
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highmem"
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/mapping/cellranger_count/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/mapping/cellranger_count"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/mapping/cellranger_count/cellranger_count"
  viash_version: "0.7.1"
  git_commit: "f2e21f1f2d74edac46fca1d608976ca77ca65d0f"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
