functionality:
  name: "calculate_qc_metrics"
  namespace: "qc"
  version: "main_build"
  authors:
  - name: "Dries Schaumont"
    email: "dries@data-intuitive.com"
    roles:
    - "author"
    props:
      github: "DriesSchaumont"
      orcid: "0000-0002-4389-0440"
  arguments: []
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      alternatives: []
      description: "Input h5mu file"
      example:
      - "input.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      alternatives: []
      example: []
      default:
      - "rna"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--layer"
      alternatives: []
      example:
      - "raw_counts"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--var_qc_metrics"
      alternatives: []
      description: "Keys to select a boolean (containing only True or False) column\
        \ from .var.\nFor each cell, calculate the proportion of total values for\
        \ genes which are labeled 'True', \ncompared to the total sum of the values\
        \ for all genes.\n"
      example:
      - "ercc,highly_variable"
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ","
      dest: "par"
    - type: "integer"
      name: "--top_n_vars"
      alternatives: []
      description: "Number of top vars to be used to calculate cumulative proportions.\n\
        If not specified, proportions are not calculated. `--top_n_vars 20,50` finds\n\
        cumulative proportion to the 20th and 50th most expressed vars.\n"
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: true
      multiple_sep: ","
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      alternatives: []
      description: "Output h5mu file."
      example:
      - "output.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      alternatives: []
      description: "The compression format to be used on the output h5mu object."
      example:
      - "gzip"
      default: []
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Add basic quality control metrics to an .h5mu file.\n\nThe metrics\
    \ are comparable to what scanpy.pp.calculate_qc_metrics output,\nalthough they\
    \ have slightly different names:\n\nVar metrics (name in this component -> name\
    \ in scanpy):\n  - pct_dropout -> pct_dropout_by_{expr_type}\n  - num_nonzero_obs\
    \ -> n_cells_by_{expr_type}\n  - obs_mean -> mean_{expr_type}\n  - total_counts\
    \ -> total_{expr_type}\n\nObs metrics:\n  - num_nonzero_vars -> n_genes_by_{expr_type}\n\
    \  - pct_{var_qc_metrics]} -> pct_{expr_type}_{qc_var}\n  - total_counts_{var_qc_metrics}\
    \ -> total_{expr_type}_{qc_var}\n  - pct_of_counts_in_top_{top_n_vars}_vars ->\
    \ pct_{expr_type}_in_top_{n}_{var_type}\n  - total_counts -> total_{expr_type}\n\
    \  \n"
  test_resources:
  - type: "python_script"
    path: "test_qc_metrics.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3/pbmc_1k_protein_v3_filtered_feature_bc_matrix.h5mu"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.9"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "mudata~=0.2.0"
    - "anndata~=0.8.0"
    - "scikit-learn~=1.2.0"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup:
  - type: "python"
    user: false
    packages:
    - "viashpy"
    - "scanpy~=1.9.2"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/qc/calculate_qc_metrics/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/qc/calculate_qc_metrics"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/qc/calculate_qc_metrics/calculate_qc_metrics"
  viash_version: "0.7.1"
  git_commit: "f2e21f1f2d74edac46fca1d608976ca77ca65d0f"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
