{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "filter_with_hvg",
    "description": "Annotate highly variable genes [Satija15] [Zheng17] [Stuart19].\n\nExpects logarithmized data, except when flavor=\u0027seurat_v3\u0027 in which count data is expected.\n\nDepending on flavor, this reproduces the R-implementations of Seurat [Satija15], Cell Ranger [Zheng17], and Seurat v3 [Stuart19].\n\nFor the dispersion-based methods ([Satija15] and [Zheng17]), the normalized dispersion is obtained by scaling with the mean and standard deviation of the dispersions for genes falling into a given bin for mean expression of genes. This means that for each bin of mean expression, highly variable genes are selected.\n\nFor [Stuart19], a normalized variance for each gene is computed. First, the data are standardized (i.e., z-score normalization per feature) with a regularized standard deviation. Next, the normalized variance is computed as the variance of each gene after the transformation. Genes are ranked by the normalized variance.\n",
    "type": "object",
    "definitions": {
      "arguments" : {
        "title": "Arguments",
        "type": "object",
        "description": "No description",
        "properties": {
          "input": {
            "type": "string",
            "description": "Input h5mu file",
            "default": ""
          },
          "modality": {
            "type": "string",
            "description": "No description",
            "default": "rna"
          },
          "layer": {
            "type": "string",
            "description": "use adata.layers[layer] for expression values instead of adata.X.",
            "default": ""
          },
          "output": {
            "type": "string",
            "description": "Output h5mu file.",
            "default": "$id.$key.output.h5mu"
          },
          "output_compression": {
            "type": "string",
            "description": "The compression format to be used on the output h5mu object.","enum": ["gzip", "lzf"],
            "default": ""
          },
          "var_name_filter": {
            "type": "string",
            "description": "In which .var slot to store a boolean array corresponding to which observations should be filtered out.",
            "default": "filter_with_hvg"
          },
          "varm_name": {
            "type": "string",
            "description": "In which .varm slot to store additional metadata.",
            "default": "hvg"
          },
          "do_subset": {
            "type": "boolean",
            "description": "Whether to subset before storing the output.",
            "default": "False"
          },
          "flavor": {
            "type": "string",
            "description": "Choose the flavor for identifying highly variable genes. For the dispersion based methods","help_text": "Choose the flavor for identifying highly variable genes. For the dispersion based methods\nin their default workflows, Seurat passes the cutoffs whereas Cell Ranger passes n_top_genes.\n","enum": ["seurat", "cell_ranger", "seurat_v3"],
            "default": "seurat"
          },
          "n_top_genes": {
            "type": "integer",
            "description": "Number of highly-variable genes to keep. Mandatory if flavor=\u0027seurat_v3\u0027.",
            "default": ""
          },
          "min_mean": {
            "type": "number",
            "description": "If n_top_genes is defined, this and all other cutoffs for the means and the normalized dispersions are ignored. Ignored if flavor=\u0027seurat_v3\u0027.",
            "default": "0.0125"
          },
          "max_mean": {
            "type": "number",
            "description": "If n_top_genes is defined, this and all other cutoffs for the means and the normalized dispersions are ignored. Ignored if flavor=\u0027seurat_v3\u0027.",
            "default": "3"
          },
          "min_disp": {
            "type": "number",
            "description": "If n_top_genes is defined, this and all other cutoffs for the means and the normalized dispersions are ignored. Ignored if flavor=\u0027seurat_v3\u0027.",
            "default": "0.5"
          },
          "max_disp": {
            "type": "number",
            "description": "If n_top_genes is defined, this and all other cutoffs for the means and the normalized dispersions are ignored. Ignored if flavor=\u0027seurat_v3\u0027. Default is +inf.",
            "default": ""
          },
          "span": {
            "type": "number",
            "description": "The fraction of the data (cells) used when estimating the variance in the loess model fit if flavor=\u0027seurat_v3\u0027.",
            "default": "0.3"
          },
          "n_bins": {
            "type": "integer",
            "description": "Number of bins for binning the mean gene expression. Normalization is done with respect to each bin. If just a single gene falls into a bin, the normalized dispersion is artificially set to 1.",
            "default": "20"
          },
          "obs_batch_key": {
            "type": "string",
            "description": "If specified, highly-variable genes are selected within each batch separately and merged. This simple ","help_text": "If specified, highly-variable genes are selected within each batch separately and merged. This simple \nprocess avoids the selection of batch-specific genes and acts as a lightweight batch correction method. \nFor all flavors, genes are first sorted by how many batches they are a HVG. For dispersion-based flavors \nties are broken by normalized dispersion. If flavor = \u0027seurat_v3\u0027, ties are broken by the median (across\nbatches) rank based on within-batch normalized variance.\n",
            "default": ""
          }
          
        }
      },
      "nextflow input-output arguments" : {
        "title": "Nextflow input-output arguments",
        "type": "object",
        "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
        "properties": {
          "publish_dir": {
            "type": "string",
            "description": "Path to an output directory.",
            "default": ""
          },
          "param_list": {
            "type": "string",
            "description": "Allows inputting multiple parameter sets to initialise a Nextflow channel. A `param_list` can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml blob.","help_text": "Allows inputting multiple parameter sets to initialise a Nextflow channel. A `param_list` can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml blob.\n\n* A list of maps (as-is) where the keys of each map corresponds to the arguments of the pipeline. Example: in a `nextflow.config` file: `param_list: [ [\u0027id\u0027: \u0027foo\u0027, \u0027input\u0027: \u0027foo.txt\u0027], [\u0027id\u0027: \u0027bar\u0027, \u0027input\u0027: \u0027bar.txt\u0027] ]`.\n* A csv file should have column names which correspond to the different arguments of this pipeline. Example: `--param_list data.csv` with columns `id,input`.\n* A json or a yaml file should be a list of maps, each of which has keys corresponding to the arguments of the pipeline. Example: `--param_list data.json` with contents `[ {\u0027id\u0027: \u0027foo\u0027, \u0027input\u0027: \u0027foo.txt\u0027}, {\u0027id\u0027: \u0027bar\u0027, \u0027input\u0027: \u0027bar.txt\u0027} ]`.\n* A yaml blob can also be passed directly as a string. Example: `--param_list \"[ {\u0027id\u0027: \u0027foo\u0027, \u0027input\u0027: \u0027foo.txt\u0027}, {\u0027id\u0027: \u0027bar\u0027, \u0027input\u0027: \u0027bar.txt\u0027} ]\"`.\n\nWhen passing a csv, json or yaml file, relative path names are relativized to the location of the parameter file. No relativation is performed when `param_list` is a list of maps (as-is) or a yaml blob.","hidden": true,
            "default": ""
          }
          
        }
      }
    },
    "allOf": [
      {
        "$ref": "#/definitions/arguments"
      },
      {
        "$ref": "#/definitions/nextflow input-output arguments"
      }
      ]
}
