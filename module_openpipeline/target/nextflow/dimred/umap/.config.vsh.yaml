functionality:
  name: "umap"
  namespace: "dimred"
  version: "main_build"
  authors:
  - name: "Dries De Maeyer"
    email: "ddemaeyer@gmail.com"
    roles:
    - "maintainer"
    props:
      github: "ddemaeyer"
  arguments: []
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      alternatives: []
      description: "Input h5mu file"
      example:
      - "input.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      alternatives: []
      example: []
      default:
      - "rna"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--uns_neighbors"
      alternatives: []
      description: "The `.uns` neighbors slot as output by the `find_neighbors` component."
      example: []
      default:
      - "neighbors"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      alternatives:
      - "-o"
      description: "Output h5mu file."
      example:
      - "output.h5mu"
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      alternatives: []
      description: "The compression format to be used on the output h5mu object."
      example:
      - "gzip"
      default: []
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--obsm_output"
      alternatives: []
      description: "The pre/postfix under which to store the UMAP results."
      example: []
      default:
      - "umap"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "double"
      name: "--min_dist"
      alternatives: []
      description: "The effective minimum distance between embedded points. Smaller\
        \ values will result in a more clustered/clumped embedding where nearby points\
        \ on the manifold are drawn closer together, while larger values will result\
        \ on a more even dispersal of points. The value should be set relative to\
        \ the spread value, which determines the scale at which embedded points will\
        \ be spread out."
      example: []
      default:
      - 0.5
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--spread"
      alternatives: []
      description: "The effective scale of embedded points. In combination with `min_dist`\
        \ this determines how clustered/clumped the embedded points are."
      example: []
      default:
      - 1.0
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--num_components"
      alternatives: []
      description: "The number of dimensions of the embedding."
      example: []
      default:
      - 2
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--max_iter"
      alternatives: []
      description: "The number of iterations (epochs) of the optimization. Called\
        \ `n_epochs` in the original UMAP. Default is set to 500 if neighbors['connectivities'].shape[0]\
        \ <= 10000, else 200."
      example: []
      default: []
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--alpha"
      alternatives: []
      description: "The initial learning rate for the embedding optimization."
      example: []
      default:
      - 1.0
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--gamma"
      alternatives: []
      description: "Weighting applied to negative samples in low dimensional embedding\
        \ optimization. Values higher than one will result in greater weight being\
        \ given to negative samples."
      example: []
      default:
      - 1.0
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--negative_sample_rate"
      alternatives: []
      description: "The number of negative edge/1-simplex samples to use per positive\
        \ edge/1-simplex sample in optimizing the low dimensional embedding."
      example: []
      default:
      - 5
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--init_pos"
      alternatives: []
      description: "How to initialize the low dimensional embedding. Called `init`\
        \ in the original UMAP. Options are:\n\n* Any key from `.obsm`\n* `'paga'`:\
        \ positions from `paga()`\n* `'spectral'`: use a spectral embedding of the\
        \ graph\n* `'random'`: assign initial embedding positions at random.\n"
      example: []
      default:
      - "spectral"
      required: false
      choices: []
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "UMAP (Uniform Manifold Approximation and Projection) is a manifold\
    \ learning technique suitable for visualizing high-dimensional data. Besides tending\
    \ to be faster than tSNE, it optimizes the embedding such that it best reflects\
    \ the topology of the data, which we represent throughout Scanpy using a neighborhood\
    \ graph. tSNE, by contrast, optimizes the distribution of nearest-neighbor distances\
    \ in the embedding such that these best match the distribution of distances in\
    \ the high-dimensional space. We use the implementation of umap-learn [McInnes18].\
    \ For a few comparisons of UMAP with tSNE, see this preprint.\n"
  test_resources:
  - type: "python_script"
    path: "run_test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/pbmc_1k_protein_v3"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.8"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "scanpy~=1.9.2"
    - "mudata~=0.2.0"
    - "anndata~=0.8.0"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/dimred/umap/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/dimred/umap"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/dimred/umap/umap"
  viash_version: "0.7.1"
  git_commit: "f2e21f1f2d74edac46fca1d608976ca77ca65d0f"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
