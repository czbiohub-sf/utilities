functionality:
  name: "process_10x_auto"
  namespace: "mapping"
  version: "main_build"
  authors:
  - name: "Angela Pisco"
    roles:
    - "author"
    props:
      github: "aopisco"
      orcid: "0000-0003-0142-2355"
  - name: "Robrecht Cannoodt"
    email: "robrecht@data-intuitive.com"
    roles:
    - "author"
    - "maintainer"
    props:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  argument_groups:
  - name: "Input directory"
    description: "Arguments related to how to search for `\".fastq.gz\"` files inside\
      \ the input directory.\nOnly files matching the `fastq_regex` are retained.\n"
    arguments:
    - type: "file"
      name: "--input_dir"
      description: "A directory containing one or more 10X samples."
      example:
      - "/path/to/input_dir"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--fastq_regex"
      description: "Only files matching this regular expression will be retained.\n\
        For more details on the notation of regular expression, see the \nJava Docs\
        \ on [Regular expressions](https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html).\n"
      info:
        hidden: true
      default:
      - "(.*)_S[0-9]+_(L[0-9]+)?_R[12](_001)?.fastq.gz"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--sample_id_replacement"
      description: "Which groups from the fastq regex to use as the sample ID. \n\
        For example, if the `fastq_regex` is `\"(.*)_S[0-9]*(_L[0-9]*)_R[12]_001.fastq.gz`,\n\
        and the fastq file is `\"foo_S002_L001_R1_001.fastq.gz`, setting the \n`sample_id_replacement`\
        \ to `\"$1\"` results in the sample ID being `\"foo\"`, while\nwith `\"$1$2\"\
        ` the sample ID would be \"foo_L001\".\n"
      info:
        hidden: true
      default:
      - "$1"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Reference"
    description: "The reference to map the reads to.\nIdeally, this reference was\
      \ created with the [Make reference](https://openpipelines.bio/components/workflows/ingestion/make_reference.html)\n\
      pipeline in OpenPipelines.\n"
    arguments:
    - type: "file"
      name: "--reference"
      description: "The path to Cell Ranger reference index. This input can be either\
        \ a `.tar.gz` file or a directory. Using a directory will be slightly faster.\n\
        Example: /path/to/reference.tar.gz.\n"
      example:
      - "reference.tar.gz"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output directory"
    description: "The resulting h5mu will be stored in the `publish_dir`. \nThis workflow\
      \ will replicate the same folder structure of where the fastq files were found\
      \ relative\nto the `input_dir`.\n"
    arguments:
    - type: "file"
      name: "--publish_dir"
      description: "Path to an output directory."
      example:
      - "output"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Operational arguments"
    description: "Arguments related to the operational side of the pipeline processing."
    arguments:
    - type: "string"
      name: "--id"
      description: "Dummy id. Will be removed in the future."
      info:
        hidden: true
      default:
      - "auto_run"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "nextflow_script"
    path: "main.nf"
    is_executable: true
    entrypoint: "auto"
  description: "Map all 10x Fastq files in a directory.\n\nSteps in the workflow:\n\
    \n  * Look for all `*.fastq.gz` files in the `input_dir` which\n    match the\
    \ regular expression in `fastq_regex`.\n  * Extract the sample id from the path\
    \ name using the same `fastq_regex`.\n  * Write the list of samples as a yaml\
    \ in the output directory.\n  * Map the reads using Cell Ranger\n  * Convert the\
    \ Cell Ranger output to h5mu\n  * Remove ambient RNA with CellBender\n  * Remove\
    \ cells with less than 100 genes or 1000 reads.\n  * Make the cell names unique\n\
    \  * Output one h5mu file per sample\n\nConcatenating the invididual h5mu files\
    \ into one h5mu file is a separate pipeline.\n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/utilities/utilities/src/mapping/process_10x/auto.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/utilities/utilities/target/nextflow/mapping/process_10x_auto"
  executable: "/home/runner/work/utilities/utilities/target/nextflow/mapping/process_10x_auto/process_10x_auto"
  viash_version: "0.7.3"
  git_commit: "fe9d13b5313a883550b35341ae3e01a48c5921c9"
  git_remote: "https://github.com/czbiohub/utilities"
